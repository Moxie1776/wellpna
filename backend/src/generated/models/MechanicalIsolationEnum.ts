
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `MechanicalIsolationEnum` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model MechanicalIsolationEnum
 * 
 */
export type MechanicalIsolationEnumModel = runtime.Types.Result.DefaultSelection<Prisma.$MechanicalIsolationEnumPayload>

export type AggregateMechanicalIsolationEnum = {
  _count: MechanicalIsolationEnumCountAggregateOutputType | null
  _min: MechanicalIsolationEnumMinAggregateOutputType | null
  _max: MechanicalIsolationEnumMaxAggregateOutputType | null
}

export type MechanicalIsolationEnumMinAggregateOutputType = {
  id: string | null
  type: string | null
}

export type MechanicalIsolationEnumMaxAggregateOutputType = {
  id: string | null
  type: string | null
}

export type MechanicalIsolationEnumCountAggregateOutputType = {
  id: number
  type: number
  _all: number
}


export type MechanicalIsolationEnumMinAggregateInputType = {
  id?: true
  type?: true
}

export type MechanicalIsolationEnumMaxAggregateInputType = {
  id?: true
  type?: true
}

export type MechanicalIsolationEnumCountAggregateInputType = {
  id?: true
  type?: true
  _all?: true
}

export type MechanicalIsolationEnumAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MechanicalIsolationEnum to aggregate.
   */
  where?: Prisma.MechanicalIsolationEnumWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MechanicalIsolationEnums to fetch.
   */
  orderBy?: Prisma.MechanicalIsolationEnumOrderByWithRelationInput | Prisma.MechanicalIsolationEnumOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MechanicalIsolationEnumWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MechanicalIsolationEnums from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MechanicalIsolationEnums.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned MechanicalIsolationEnums
  **/
  _count?: true | MechanicalIsolationEnumCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MechanicalIsolationEnumMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MechanicalIsolationEnumMaxAggregateInputType
}

export type GetMechanicalIsolationEnumAggregateType<T extends MechanicalIsolationEnumAggregateArgs> = {
      [P in keyof T & keyof AggregateMechanicalIsolationEnum]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMechanicalIsolationEnum[P]>
    : Prisma.GetScalarType<T[P], AggregateMechanicalIsolationEnum[P]>
}




export type MechanicalIsolationEnumGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MechanicalIsolationEnumWhereInput
  orderBy?: Prisma.MechanicalIsolationEnumOrderByWithAggregationInput | Prisma.MechanicalIsolationEnumOrderByWithAggregationInput[]
  by: Prisma.MechanicalIsolationEnumScalarFieldEnum[] | Prisma.MechanicalIsolationEnumScalarFieldEnum
  having?: Prisma.MechanicalIsolationEnumScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MechanicalIsolationEnumCountAggregateInputType | true
  _min?: MechanicalIsolationEnumMinAggregateInputType
  _max?: MechanicalIsolationEnumMaxAggregateInputType
}

export type MechanicalIsolationEnumGroupByOutputType = {
  id: string
  type: string
  _count: MechanicalIsolationEnumCountAggregateOutputType | null
  _min: MechanicalIsolationEnumMinAggregateOutputType | null
  _max: MechanicalIsolationEnumMaxAggregateOutputType | null
}

type GetMechanicalIsolationEnumGroupByPayload<T extends MechanicalIsolationEnumGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MechanicalIsolationEnumGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MechanicalIsolationEnumGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MechanicalIsolationEnumGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MechanicalIsolationEnumGroupByOutputType[P]>
      }
    >
  >



export type MechanicalIsolationEnumWhereInput = {
  AND?: Prisma.MechanicalIsolationEnumWhereInput | Prisma.MechanicalIsolationEnumWhereInput[]
  OR?: Prisma.MechanicalIsolationEnumWhereInput[]
  NOT?: Prisma.MechanicalIsolationEnumWhereInput | Prisma.MechanicalIsolationEnumWhereInput[]
  id?: Prisma.StringFilter<"MechanicalIsolationEnum"> | string
  type?: Prisma.StringFilter<"MechanicalIsolationEnum"> | string
  mechanicalIsolation?: Prisma.MechanicalIsolationListRelationFilter
  PlugSchedule?: Prisma.PlugScheduleListRelationFilter
}

export type MechanicalIsolationEnumOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  mechanicalIsolation?: Prisma.MechanicalIsolationOrderByRelationAggregateInput
  PlugSchedule?: Prisma.PlugScheduleOrderByRelationAggregateInput
}

export type MechanicalIsolationEnumWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.MechanicalIsolationEnumWhereInput | Prisma.MechanicalIsolationEnumWhereInput[]
  OR?: Prisma.MechanicalIsolationEnumWhereInput[]
  NOT?: Prisma.MechanicalIsolationEnumWhereInput | Prisma.MechanicalIsolationEnumWhereInput[]
  type?: Prisma.StringFilter<"MechanicalIsolationEnum"> | string
  mechanicalIsolation?: Prisma.MechanicalIsolationListRelationFilter
  PlugSchedule?: Prisma.PlugScheduleListRelationFilter
}, "id">

export type MechanicalIsolationEnumOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  _count?: Prisma.MechanicalIsolationEnumCountOrderByAggregateInput
  _max?: Prisma.MechanicalIsolationEnumMaxOrderByAggregateInput
  _min?: Prisma.MechanicalIsolationEnumMinOrderByAggregateInput
}

export type MechanicalIsolationEnumScalarWhereWithAggregatesInput = {
  AND?: Prisma.MechanicalIsolationEnumScalarWhereWithAggregatesInput | Prisma.MechanicalIsolationEnumScalarWhereWithAggregatesInput[]
  OR?: Prisma.MechanicalIsolationEnumScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MechanicalIsolationEnumScalarWhereWithAggregatesInput | Prisma.MechanicalIsolationEnumScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"MechanicalIsolationEnum"> | string
  type?: Prisma.StringWithAggregatesFilter<"MechanicalIsolationEnum"> | string
}

export type MechanicalIsolationEnumCreateInput = {
  id?: string
  type: string
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutMechanicalIsolationEnumInput
  PlugSchedule?: Prisma.PlugScheduleCreateNestedManyWithoutMechanicalIsolationEnumInput
}

export type MechanicalIsolationEnumUncheckedCreateInput = {
  id?: string
  type: string
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutMechanicalIsolationEnumInput
  PlugSchedule?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutMechanicalIsolationEnumInput
}

export type MechanicalIsolationEnumUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutMechanicalIsolationEnumNestedInput
  PlugSchedule?: Prisma.PlugScheduleUpdateManyWithoutMechanicalIsolationEnumNestedInput
}

export type MechanicalIsolationEnumUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutMechanicalIsolationEnumNestedInput
  PlugSchedule?: Prisma.PlugScheduleUncheckedUpdateManyWithoutMechanicalIsolationEnumNestedInput
}

export type MechanicalIsolationEnumCreateManyInput = {
  id?: string
  type: string
}

export type MechanicalIsolationEnumUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
}

export type MechanicalIsolationEnumUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
}

export type MechanicalIsolationEnumScalarRelationFilter = {
  is?: Prisma.MechanicalIsolationEnumWhereInput
  isNot?: Prisma.MechanicalIsolationEnumWhereInput
}

export type MechanicalIsolationEnumCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
}

export type MechanicalIsolationEnumMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
}

export type MechanicalIsolationEnumMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
}

export type MechanicalIsolationEnumCreateNestedOneWithoutMechanicalIsolationInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateWithoutMechanicalIsolationInput, Prisma.MechanicalIsolationEnumUncheckedCreateWithoutMechanicalIsolationInput>
  connectOrCreate?: Prisma.MechanicalIsolationEnumCreateOrConnectWithoutMechanicalIsolationInput
  connect?: Prisma.MechanicalIsolationEnumWhereUniqueInput
}

export type MechanicalIsolationEnumUpdateOneRequiredWithoutMechanicalIsolationNestedInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateWithoutMechanicalIsolationInput, Prisma.MechanicalIsolationEnumUncheckedCreateWithoutMechanicalIsolationInput>
  connectOrCreate?: Prisma.MechanicalIsolationEnumCreateOrConnectWithoutMechanicalIsolationInput
  upsert?: Prisma.MechanicalIsolationEnumUpsertWithoutMechanicalIsolationInput
  connect?: Prisma.MechanicalIsolationEnumWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateToOneWithWhereWithoutMechanicalIsolationInput, Prisma.MechanicalIsolationEnumUpdateWithoutMechanicalIsolationInput>, Prisma.MechanicalIsolationEnumUncheckedUpdateWithoutMechanicalIsolationInput>
}

export type MechanicalIsolationEnumCreateNestedOneWithoutPlugScheduleInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateWithoutPlugScheduleInput, Prisma.MechanicalIsolationEnumUncheckedCreateWithoutPlugScheduleInput>
  connectOrCreate?: Prisma.MechanicalIsolationEnumCreateOrConnectWithoutPlugScheduleInput
  connect?: Prisma.MechanicalIsolationEnumWhereUniqueInput
}

export type MechanicalIsolationEnumUpdateOneRequiredWithoutPlugScheduleNestedInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateWithoutPlugScheduleInput, Prisma.MechanicalIsolationEnumUncheckedCreateWithoutPlugScheduleInput>
  connectOrCreate?: Prisma.MechanicalIsolationEnumCreateOrConnectWithoutPlugScheduleInput
  upsert?: Prisma.MechanicalIsolationEnumUpsertWithoutPlugScheduleInput
  connect?: Prisma.MechanicalIsolationEnumWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateToOneWithWhereWithoutPlugScheduleInput, Prisma.MechanicalIsolationEnumUpdateWithoutPlugScheduleInput>, Prisma.MechanicalIsolationEnumUncheckedUpdateWithoutPlugScheduleInput>
}

export type MechanicalIsolationEnumCreateWithoutMechanicalIsolationInput = {
  id?: string
  type: string
  PlugSchedule?: Prisma.PlugScheduleCreateNestedManyWithoutMechanicalIsolationEnumInput
}

export type MechanicalIsolationEnumUncheckedCreateWithoutMechanicalIsolationInput = {
  id?: string
  type: string
  PlugSchedule?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutMechanicalIsolationEnumInput
}

export type MechanicalIsolationEnumCreateOrConnectWithoutMechanicalIsolationInput = {
  where: Prisma.MechanicalIsolationEnumWhereUniqueInput
  create: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateWithoutMechanicalIsolationInput, Prisma.MechanicalIsolationEnumUncheckedCreateWithoutMechanicalIsolationInput>
}

export type MechanicalIsolationEnumUpsertWithoutMechanicalIsolationInput = {
  update: Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateWithoutMechanicalIsolationInput, Prisma.MechanicalIsolationEnumUncheckedUpdateWithoutMechanicalIsolationInput>
  create: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateWithoutMechanicalIsolationInput, Prisma.MechanicalIsolationEnumUncheckedCreateWithoutMechanicalIsolationInput>
  where?: Prisma.MechanicalIsolationEnumWhereInput
}

export type MechanicalIsolationEnumUpdateToOneWithWhereWithoutMechanicalIsolationInput = {
  where?: Prisma.MechanicalIsolationEnumWhereInput
  data: Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateWithoutMechanicalIsolationInput, Prisma.MechanicalIsolationEnumUncheckedUpdateWithoutMechanicalIsolationInput>
}

export type MechanicalIsolationEnumUpdateWithoutMechanicalIsolationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  PlugSchedule?: Prisma.PlugScheduleUpdateManyWithoutMechanicalIsolationEnumNestedInput
}

export type MechanicalIsolationEnumUncheckedUpdateWithoutMechanicalIsolationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  PlugSchedule?: Prisma.PlugScheduleUncheckedUpdateManyWithoutMechanicalIsolationEnumNestedInput
}

export type MechanicalIsolationEnumCreateWithoutPlugScheduleInput = {
  id?: string
  type: string
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutMechanicalIsolationEnumInput
}

export type MechanicalIsolationEnumUncheckedCreateWithoutPlugScheduleInput = {
  id?: string
  type: string
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutMechanicalIsolationEnumInput
}

export type MechanicalIsolationEnumCreateOrConnectWithoutPlugScheduleInput = {
  where: Prisma.MechanicalIsolationEnumWhereUniqueInput
  create: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateWithoutPlugScheduleInput, Prisma.MechanicalIsolationEnumUncheckedCreateWithoutPlugScheduleInput>
}

export type MechanicalIsolationEnumUpsertWithoutPlugScheduleInput = {
  update: Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateWithoutPlugScheduleInput, Prisma.MechanicalIsolationEnumUncheckedUpdateWithoutPlugScheduleInput>
  create: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateWithoutPlugScheduleInput, Prisma.MechanicalIsolationEnumUncheckedCreateWithoutPlugScheduleInput>
  where?: Prisma.MechanicalIsolationEnumWhereInput
}

export type MechanicalIsolationEnumUpdateToOneWithWhereWithoutPlugScheduleInput = {
  where?: Prisma.MechanicalIsolationEnumWhereInput
  data: Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateWithoutPlugScheduleInput, Prisma.MechanicalIsolationEnumUncheckedUpdateWithoutPlugScheduleInput>
}

export type MechanicalIsolationEnumUpdateWithoutPlugScheduleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutMechanicalIsolationEnumNestedInput
}

export type MechanicalIsolationEnumUncheckedUpdateWithoutPlugScheduleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutMechanicalIsolationEnumNestedInput
}


/**
 * Count Type MechanicalIsolationEnumCountOutputType
 */

export type MechanicalIsolationEnumCountOutputType = {
  mechanicalIsolation: number
  PlugSchedule: number
}

export type MechanicalIsolationEnumCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mechanicalIsolation?: boolean | MechanicalIsolationEnumCountOutputTypeCountMechanicalIsolationArgs
  PlugSchedule?: boolean | MechanicalIsolationEnumCountOutputTypeCountPlugScheduleArgs
}

/**
 * MechanicalIsolationEnumCountOutputType without action
 */
export type MechanicalIsolationEnumCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnumCountOutputType
   */
  select?: Prisma.MechanicalIsolationEnumCountOutputTypeSelect<ExtArgs> | null
}

/**
 * MechanicalIsolationEnumCountOutputType without action
 */
export type MechanicalIsolationEnumCountOutputTypeCountMechanicalIsolationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MechanicalIsolationWhereInput
}

/**
 * MechanicalIsolationEnumCountOutputType without action
 */
export type MechanicalIsolationEnumCountOutputTypeCountPlugScheduleArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PlugScheduleWhereInput
}


export type MechanicalIsolationEnumSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  mechanicalIsolation?: boolean | Prisma.MechanicalIsolationEnum$mechanicalIsolationArgs<ExtArgs>
  PlugSchedule?: boolean | Prisma.MechanicalIsolationEnum$PlugScheduleArgs<ExtArgs>
  _count?: boolean | Prisma.MechanicalIsolationEnumCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mechanicalIsolationEnum"]>

export type MechanicalIsolationEnumSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
}, ExtArgs["result"]["mechanicalIsolationEnum"]>

export type MechanicalIsolationEnumSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
}, ExtArgs["result"]["mechanicalIsolationEnum"]>

export type MechanicalIsolationEnumSelectScalar = {
  id?: boolean
  type?: boolean
}

export type MechanicalIsolationEnumOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "type", ExtArgs["result"]["mechanicalIsolationEnum"]>
export type MechanicalIsolationEnumInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mechanicalIsolation?: boolean | Prisma.MechanicalIsolationEnum$mechanicalIsolationArgs<ExtArgs>
  PlugSchedule?: boolean | Prisma.MechanicalIsolationEnum$PlugScheduleArgs<ExtArgs>
  _count?: boolean | Prisma.MechanicalIsolationEnumCountOutputTypeDefaultArgs<ExtArgs>
}
export type MechanicalIsolationEnumIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type MechanicalIsolationEnumIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $MechanicalIsolationEnumPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "MechanicalIsolationEnum"
  objects: {
    mechanicalIsolation: Prisma.$MechanicalIsolationPayload<ExtArgs>[]
    PlugSchedule: Prisma.$PlugSchedulePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    type: string
  }, ExtArgs["result"]["mechanicalIsolationEnum"]>
  composites: {}
}

export type MechanicalIsolationEnumGetPayload<S extends boolean | null | undefined | MechanicalIsolationEnumDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload, S>

export type MechanicalIsolationEnumCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MechanicalIsolationEnumFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MechanicalIsolationEnumCountAggregateInputType | true
  }

export interface MechanicalIsolationEnumDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MechanicalIsolationEnum'], meta: { name: 'MechanicalIsolationEnum' } }
  /**
   * Find zero or one MechanicalIsolationEnum that matches the filter.
   * @param {MechanicalIsolationEnumFindUniqueArgs} args - Arguments to find a MechanicalIsolationEnum
   * @example
   * // Get one MechanicalIsolationEnum
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MechanicalIsolationEnumFindUniqueArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationEnumFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one MechanicalIsolationEnum that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MechanicalIsolationEnumFindUniqueOrThrowArgs} args - Arguments to find a MechanicalIsolationEnum
   * @example
   * // Get one MechanicalIsolationEnum
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MechanicalIsolationEnumFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationEnumFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MechanicalIsolationEnum that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationEnumFindFirstArgs} args - Arguments to find a MechanicalIsolationEnum
   * @example
   * // Get one MechanicalIsolationEnum
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MechanicalIsolationEnumFindFirstArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationEnumFindFirstArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MechanicalIsolationEnum that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationEnumFindFirstOrThrowArgs} args - Arguments to find a MechanicalIsolationEnum
   * @example
   * // Get one MechanicalIsolationEnum
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MechanicalIsolationEnumFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationEnumFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more MechanicalIsolationEnums that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationEnumFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all MechanicalIsolationEnums
   * const mechanicalIsolationEnums = await prisma.mechanicalIsolationEnum.findMany()
   * 
   * // Get first 10 MechanicalIsolationEnums
   * const mechanicalIsolationEnums = await prisma.mechanicalIsolationEnum.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mechanicalIsolationEnumWithIdOnly = await prisma.mechanicalIsolationEnum.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MechanicalIsolationEnumFindManyArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationEnumFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a MechanicalIsolationEnum.
   * @param {MechanicalIsolationEnumCreateArgs} args - Arguments to create a MechanicalIsolationEnum.
   * @example
   * // Create one MechanicalIsolationEnum
   * const MechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.create({
   *   data: {
   *     // ... data to create a MechanicalIsolationEnum
   *   }
   * })
   * 
   */
  create<T extends MechanicalIsolationEnumCreateArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationEnumCreateArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many MechanicalIsolationEnums.
   * @param {MechanicalIsolationEnumCreateManyArgs} args - Arguments to create many MechanicalIsolationEnums.
   * @example
   * // Create many MechanicalIsolationEnums
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MechanicalIsolationEnumCreateManyArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationEnumCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many MechanicalIsolationEnums and returns the data saved in the database.
   * @param {MechanicalIsolationEnumCreateManyAndReturnArgs} args - Arguments to create many MechanicalIsolationEnums.
   * @example
   * // Create many MechanicalIsolationEnums
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many MechanicalIsolationEnums and only return the `id`
   * const mechanicalIsolationEnumWithIdOnly = await prisma.mechanicalIsolationEnum.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MechanicalIsolationEnumCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationEnumCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a MechanicalIsolationEnum.
   * @param {MechanicalIsolationEnumDeleteArgs} args - Arguments to delete one MechanicalIsolationEnum.
   * @example
   * // Delete one MechanicalIsolationEnum
   * const MechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.delete({
   *   where: {
   *     // ... filter to delete one MechanicalIsolationEnum
   *   }
   * })
   * 
   */
  delete<T extends MechanicalIsolationEnumDeleteArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationEnumDeleteArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one MechanicalIsolationEnum.
   * @param {MechanicalIsolationEnumUpdateArgs} args - Arguments to update one MechanicalIsolationEnum.
   * @example
   * // Update one MechanicalIsolationEnum
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MechanicalIsolationEnumUpdateArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationEnumUpdateArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more MechanicalIsolationEnums.
   * @param {MechanicalIsolationEnumDeleteManyArgs} args - Arguments to filter MechanicalIsolationEnums to delete.
   * @example
   * // Delete a few MechanicalIsolationEnums
   * const { count } = await prisma.mechanicalIsolationEnum.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MechanicalIsolationEnumDeleteManyArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationEnumDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MechanicalIsolationEnums.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationEnumUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many MechanicalIsolationEnums
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MechanicalIsolationEnumUpdateManyArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationEnumUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MechanicalIsolationEnums and returns the data updated in the database.
   * @param {MechanicalIsolationEnumUpdateManyAndReturnArgs} args - Arguments to update many MechanicalIsolationEnums.
   * @example
   * // Update many MechanicalIsolationEnums
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more MechanicalIsolationEnums and only return the `id`
   * const mechanicalIsolationEnumWithIdOnly = await prisma.mechanicalIsolationEnum.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MechanicalIsolationEnumUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationEnumUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one MechanicalIsolationEnum.
   * @param {MechanicalIsolationEnumUpsertArgs} args - Arguments to update or create a MechanicalIsolationEnum.
   * @example
   * // Update or create a MechanicalIsolationEnum
   * const mechanicalIsolationEnum = await prisma.mechanicalIsolationEnum.upsert({
   *   create: {
   *     // ... data to create a MechanicalIsolationEnum
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the MechanicalIsolationEnum we want to update
   *   }
   * })
   */
  upsert<T extends MechanicalIsolationEnumUpsertArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationEnumUpsertArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of MechanicalIsolationEnums.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationEnumCountArgs} args - Arguments to filter MechanicalIsolationEnums to count.
   * @example
   * // Count the number of MechanicalIsolationEnums
   * const count = await prisma.mechanicalIsolationEnum.count({
   *   where: {
   *     // ... the filter for the MechanicalIsolationEnums we want to count
   *   }
   * })
  **/
  count<T extends MechanicalIsolationEnumCountArgs>(
    args?: Prisma.Subset<T, MechanicalIsolationEnumCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MechanicalIsolationEnumCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a MechanicalIsolationEnum.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationEnumAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MechanicalIsolationEnumAggregateArgs>(args: Prisma.Subset<T, MechanicalIsolationEnumAggregateArgs>): Prisma.PrismaPromise<GetMechanicalIsolationEnumAggregateType<T>>

  /**
   * Group by MechanicalIsolationEnum.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationEnumGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MechanicalIsolationEnumGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MechanicalIsolationEnumGroupByArgs['orderBy'] }
      : { orderBy?: MechanicalIsolationEnumGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MechanicalIsolationEnumGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMechanicalIsolationEnumGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the MechanicalIsolationEnum model
 */
readonly fields: MechanicalIsolationEnumFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for MechanicalIsolationEnum.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MechanicalIsolationEnumClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  mechanicalIsolation<T extends Prisma.MechanicalIsolationEnum$mechanicalIsolationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MechanicalIsolationEnum$mechanicalIsolationArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  PlugSchedule<T extends Prisma.MechanicalIsolationEnum$PlugScheduleArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MechanicalIsolationEnum$PlugScheduleArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the MechanicalIsolationEnum model
 */
export interface MechanicalIsolationEnumFieldRefs {
  readonly id: Prisma.FieldRef<"MechanicalIsolationEnum", 'String'>
  readonly type: Prisma.FieldRef<"MechanicalIsolationEnum", 'String'>
}
    

// Custom InputTypes
/**
 * MechanicalIsolationEnum findUnique
 */
export type MechanicalIsolationEnumFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolationEnum to fetch.
   */
  where: Prisma.MechanicalIsolationEnumWhereUniqueInput
}

/**
 * MechanicalIsolationEnum findUniqueOrThrow
 */
export type MechanicalIsolationEnumFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolationEnum to fetch.
   */
  where: Prisma.MechanicalIsolationEnumWhereUniqueInput
}

/**
 * MechanicalIsolationEnum findFirst
 */
export type MechanicalIsolationEnumFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolationEnum to fetch.
   */
  where?: Prisma.MechanicalIsolationEnumWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MechanicalIsolationEnums to fetch.
   */
  orderBy?: Prisma.MechanicalIsolationEnumOrderByWithRelationInput | Prisma.MechanicalIsolationEnumOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MechanicalIsolationEnums.
   */
  cursor?: Prisma.MechanicalIsolationEnumWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MechanicalIsolationEnums from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MechanicalIsolationEnums.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MechanicalIsolationEnums.
   */
  distinct?: Prisma.MechanicalIsolationEnumScalarFieldEnum | Prisma.MechanicalIsolationEnumScalarFieldEnum[]
}

/**
 * MechanicalIsolationEnum findFirstOrThrow
 */
export type MechanicalIsolationEnumFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolationEnum to fetch.
   */
  where?: Prisma.MechanicalIsolationEnumWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MechanicalIsolationEnums to fetch.
   */
  orderBy?: Prisma.MechanicalIsolationEnumOrderByWithRelationInput | Prisma.MechanicalIsolationEnumOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MechanicalIsolationEnums.
   */
  cursor?: Prisma.MechanicalIsolationEnumWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MechanicalIsolationEnums from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MechanicalIsolationEnums.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MechanicalIsolationEnums.
   */
  distinct?: Prisma.MechanicalIsolationEnumScalarFieldEnum | Prisma.MechanicalIsolationEnumScalarFieldEnum[]
}

/**
 * MechanicalIsolationEnum findMany
 */
export type MechanicalIsolationEnumFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolationEnums to fetch.
   */
  where?: Prisma.MechanicalIsolationEnumWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MechanicalIsolationEnums to fetch.
   */
  orderBy?: Prisma.MechanicalIsolationEnumOrderByWithRelationInput | Prisma.MechanicalIsolationEnumOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing MechanicalIsolationEnums.
   */
  cursor?: Prisma.MechanicalIsolationEnumWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MechanicalIsolationEnums from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MechanicalIsolationEnums.
   */
  skip?: number
  distinct?: Prisma.MechanicalIsolationEnumScalarFieldEnum | Prisma.MechanicalIsolationEnumScalarFieldEnum[]
}

/**
 * MechanicalIsolationEnum create
 */
export type MechanicalIsolationEnumCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * The data needed to create a MechanicalIsolationEnum.
   */
  data: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateInput, Prisma.MechanicalIsolationEnumUncheckedCreateInput>
}

/**
 * MechanicalIsolationEnum createMany
 */
export type MechanicalIsolationEnumCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many MechanicalIsolationEnums.
   */
  data: Prisma.MechanicalIsolationEnumCreateManyInput | Prisma.MechanicalIsolationEnumCreateManyInput[]
}

/**
 * MechanicalIsolationEnum createManyAndReturn
 */
export type MechanicalIsolationEnumCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * The data used to create many MechanicalIsolationEnums.
   */
  data: Prisma.MechanicalIsolationEnumCreateManyInput | Prisma.MechanicalIsolationEnumCreateManyInput[]
}

/**
 * MechanicalIsolationEnum update
 */
export type MechanicalIsolationEnumUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * The data needed to update a MechanicalIsolationEnum.
   */
  data: Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateInput, Prisma.MechanicalIsolationEnumUncheckedUpdateInput>
  /**
   * Choose, which MechanicalIsolationEnum to update.
   */
  where: Prisma.MechanicalIsolationEnumWhereUniqueInput
}

/**
 * MechanicalIsolationEnum updateMany
 */
export type MechanicalIsolationEnumUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update MechanicalIsolationEnums.
   */
  data: Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateManyMutationInput, Prisma.MechanicalIsolationEnumUncheckedUpdateManyInput>
  /**
   * Filter which MechanicalIsolationEnums to update
   */
  where?: Prisma.MechanicalIsolationEnumWhereInput
  /**
   * Limit how many MechanicalIsolationEnums to update.
   */
  limit?: number
}

/**
 * MechanicalIsolationEnum updateManyAndReturn
 */
export type MechanicalIsolationEnumUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * The data used to update MechanicalIsolationEnums.
   */
  data: Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateManyMutationInput, Prisma.MechanicalIsolationEnumUncheckedUpdateManyInput>
  /**
   * Filter which MechanicalIsolationEnums to update
   */
  where?: Prisma.MechanicalIsolationEnumWhereInput
  /**
   * Limit how many MechanicalIsolationEnums to update.
   */
  limit?: number
}

/**
 * MechanicalIsolationEnum upsert
 */
export type MechanicalIsolationEnumUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * The filter to search for the MechanicalIsolationEnum to update in case it exists.
   */
  where: Prisma.MechanicalIsolationEnumWhereUniqueInput
  /**
   * In case the MechanicalIsolationEnum found by the `where` argument doesn't exist, create a new MechanicalIsolationEnum with this data.
   */
  create: Prisma.XOR<Prisma.MechanicalIsolationEnumCreateInput, Prisma.MechanicalIsolationEnumUncheckedCreateInput>
  /**
   * In case the MechanicalIsolationEnum was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MechanicalIsolationEnumUpdateInput, Prisma.MechanicalIsolationEnumUncheckedUpdateInput>
}

/**
 * MechanicalIsolationEnum delete
 */
export type MechanicalIsolationEnumDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
  /**
   * Filter which MechanicalIsolationEnum to delete.
   */
  where: Prisma.MechanicalIsolationEnumWhereUniqueInput
}

/**
 * MechanicalIsolationEnum deleteMany
 */
export type MechanicalIsolationEnumDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MechanicalIsolationEnums to delete
   */
  where?: Prisma.MechanicalIsolationEnumWhereInput
  /**
   * Limit how many MechanicalIsolationEnums to delete.
   */
  limit?: number
}

/**
 * MechanicalIsolationEnum.mechanicalIsolation
 */
export type MechanicalIsolationEnum$mechanicalIsolationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  where?: Prisma.MechanicalIsolationWhereInput
  orderBy?: Prisma.MechanicalIsolationOrderByWithRelationInput | Prisma.MechanicalIsolationOrderByWithRelationInput[]
  cursor?: Prisma.MechanicalIsolationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MechanicalIsolationScalarFieldEnum | Prisma.MechanicalIsolationScalarFieldEnum[]
}

/**
 * MechanicalIsolationEnum.PlugSchedule
 */
export type MechanicalIsolationEnum$PlugScheduleArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  where?: Prisma.PlugScheduleWhereInput
  orderBy?: Prisma.PlugScheduleOrderByWithRelationInput | Prisma.PlugScheduleOrderByWithRelationInput[]
  cursor?: Prisma.PlugScheduleWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PlugScheduleScalarFieldEnum | Prisma.PlugScheduleScalarFieldEnum[]
}

/**
 * MechanicalIsolationEnum without action
 */
export type MechanicalIsolationEnumDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolationEnum
   */
  select?: Prisma.MechanicalIsolationEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolationEnum
   */
  omit?: Prisma.MechanicalIsolationEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationEnumInclude<ExtArgs> | null
}


/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `PlugSchedule` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model PlugSchedule
 * 
 */
export type PlugScheduleModel = runtime.Types.Result.DefaultSelection<Prisma.$PlugSchedulePayload>

export type AggregatePlugSchedule = {
  _count: PlugScheduleCountAggregateOutputType | null
  _avg: PlugScheduleAvgAggregateOutputType | null
  _sum: PlugScheduleSumAggregateOutputType | null
  _min: PlugScheduleMinAggregateOutputType | null
  _max: PlugScheduleMaxAggregateOutputType | null
}

export type PlugScheduleAvgAggregateOutputType = {
  topDepth: number | null
  bottomDepth: number | null
}

export type PlugScheduleSumAggregateOutputType = {
  topDepth: number | null
  bottomDepth: number | null
}

export type PlugScheduleMinAggregateOutputType = {
  id: string | null
  api: string | null
  mechanicalIsolationEnumId: string | null
  summary: string | null
  topDepth: number | null
  bottomDepth: number | null
  dateSet: Date | null
  description: string | null
  wocDetails: string | null
  notes: string | null
}

export type PlugScheduleMaxAggregateOutputType = {
  id: string | null
  api: string | null
  mechanicalIsolationEnumId: string | null
  summary: string | null
  topDepth: number | null
  bottomDepth: number | null
  dateSet: Date | null
  description: string | null
  wocDetails: string | null
  notes: string | null
}

export type PlugScheduleCountAggregateOutputType = {
  id: number
  api: number
  mechanicalIsolationEnumId: number
  summary: number
  topDepth: number
  bottomDepth: number
  dateSet: number
  description: number
  wocDetails: number
  notes: number
  _all: number
}


export type PlugScheduleAvgAggregateInputType = {
  topDepth?: true
  bottomDepth?: true
}

export type PlugScheduleSumAggregateInputType = {
  topDepth?: true
  bottomDepth?: true
}

export type PlugScheduleMinAggregateInputType = {
  id?: true
  api?: true
  mechanicalIsolationEnumId?: true
  summary?: true
  topDepth?: true
  bottomDepth?: true
  dateSet?: true
  description?: true
  wocDetails?: true
  notes?: true
}

export type PlugScheduleMaxAggregateInputType = {
  id?: true
  api?: true
  mechanicalIsolationEnumId?: true
  summary?: true
  topDepth?: true
  bottomDepth?: true
  dateSet?: true
  description?: true
  wocDetails?: true
  notes?: true
}

export type PlugScheduleCountAggregateInputType = {
  id?: true
  api?: true
  mechanicalIsolationEnumId?: true
  summary?: true
  topDepth?: true
  bottomDepth?: true
  dateSet?: true
  description?: true
  wocDetails?: true
  notes?: true
  _all?: true
}

export type PlugScheduleAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PlugSchedule to aggregate.
   */
  where?: Prisma.PlugScheduleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PlugSchedules to fetch.
   */
  orderBy?: Prisma.PlugScheduleOrderByWithRelationInput | Prisma.PlugScheduleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PlugScheduleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PlugSchedules from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PlugSchedules.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PlugSchedules
  **/
  _count?: true | PlugScheduleCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PlugScheduleAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PlugScheduleSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PlugScheduleMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PlugScheduleMaxAggregateInputType
}

export type GetPlugScheduleAggregateType<T extends PlugScheduleAggregateArgs> = {
      [P in keyof T & keyof AggregatePlugSchedule]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePlugSchedule[P]>
    : Prisma.GetScalarType<T[P], AggregatePlugSchedule[P]>
}




export type PlugScheduleGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PlugScheduleWhereInput
  orderBy?: Prisma.PlugScheduleOrderByWithAggregationInput | Prisma.PlugScheduleOrderByWithAggregationInput[]
  by: Prisma.PlugScheduleScalarFieldEnum[] | Prisma.PlugScheduleScalarFieldEnum
  having?: Prisma.PlugScheduleScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PlugScheduleCountAggregateInputType | true
  _avg?: PlugScheduleAvgAggregateInputType
  _sum?: PlugScheduleSumAggregateInputType
  _min?: PlugScheduleMinAggregateInputType
  _max?: PlugScheduleMaxAggregateInputType
}

export type PlugScheduleGroupByOutputType = {
  id: string
  api: string
  mechanicalIsolationEnumId: string
  summary: string
  topDepth: number
  bottomDepth: number | null
  dateSet: Date | null
  description: string
  wocDetails: string | null
  notes: string | null
  _count: PlugScheduleCountAggregateOutputType | null
  _avg: PlugScheduleAvgAggregateOutputType | null
  _sum: PlugScheduleSumAggregateOutputType | null
  _min: PlugScheduleMinAggregateOutputType | null
  _max: PlugScheduleMaxAggregateOutputType | null
}

type GetPlugScheduleGroupByPayload<T extends PlugScheduleGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PlugScheduleGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PlugScheduleGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PlugScheduleGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PlugScheduleGroupByOutputType[P]>
      }
    >
  >



export type PlugScheduleWhereInput = {
  AND?: Prisma.PlugScheduleWhereInput | Prisma.PlugScheduleWhereInput[]
  OR?: Prisma.PlugScheduleWhereInput[]
  NOT?: Prisma.PlugScheduleWhereInput | Prisma.PlugScheduleWhereInput[]
  id?: Prisma.StringFilter<"PlugSchedule"> | string
  api?: Prisma.StringFilter<"PlugSchedule"> | string
  mechanicalIsolationEnumId?: Prisma.StringFilter<"PlugSchedule"> | string
  summary?: Prisma.StringFilter<"PlugSchedule"> | string
  topDepth?: Prisma.IntFilter<"PlugSchedule"> | number
  bottomDepth?: Prisma.IntNullableFilter<"PlugSchedule"> | number | null
  dateSet?: Prisma.DateTimeNullableFilter<"PlugSchedule"> | Date | string | null
  description?: Prisma.StringFilter<"PlugSchedule"> | string
  wocDetails?: Prisma.StringNullableFilter<"PlugSchedule"> | string | null
  notes?: Prisma.StringNullableFilter<"PlugSchedule"> | string | null
  mechanicalIsolationEnum?: Prisma.XOR<Prisma.MechanicalIsolationEnumScalarRelationFilter, Prisma.MechanicalIsolationEnumWhereInput>
  well?: Prisma.XOR<Prisma.WellScalarRelationFilter, Prisma.WellWhereInput>
  PlugCement?: Prisma.PlugCementListRelationFilter
}

export type PlugScheduleOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  summary?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrderInput | Prisma.SortOrder
  dateSet?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrder
  wocDetails?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  mechanicalIsolationEnum?: Prisma.MechanicalIsolationEnumOrderByWithRelationInput
  well?: Prisma.WellOrderByWithRelationInput
  PlugCement?: Prisma.PlugCementOrderByRelationAggregateInput
}

export type PlugScheduleWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.PlugScheduleWhereInput | Prisma.PlugScheduleWhereInput[]
  OR?: Prisma.PlugScheduleWhereInput[]
  NOT?: Prisma.PlugScheduleWhereInput | Prisma.PlugScheduleWhereInput[]
  api?: Prisma.StringFilter<"PlugSchedule"> | string
  mechanicalIsolationEnumId?: Prisma.StringFilter<"PlugSchedule"> | string
  summary?: Prisma.StringFilter<"PlugSchedule"> | string
  topDepth?: Prisma.IntFilter<"PlugSchedule"> | number
  bottomDepth?: Prisma.IntNullableFilter<"PlugSchedule"> | number | null
  dateSet?: Prisma.DateTimeNullableFilter<"PlugSchedule"> | Date | string | null
  description?: Prisma.StringFilter<"PlugSchedule"> | string
  wocDetails?: Prisma.StringNullableFilter<"PlugSchedule"> | string | null
  notes?: Prisma.StringNullableFilter<"PlugSchedule"> | string | null
  mechanicalIsolationEnum?: Prisma.XOR<Prisma.MechanicalIsolationEnumScalarRelationFilter, Prisma.MechanicalIsolationEnumWhereInput>
  well?: Prisma.XOR<Prisma.WellScalarRelationFilter, Prisma.WellWhereInput>
  PlugCement?: Prisma.PlugCementListRelationFilter
}, "id">

export type PlugScheduleOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  summary?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrderInput | Prisma.SortOrder
  dateSet?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrder
  wocDetails?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.PlugScheduleCountOrderByAggregateInput
  _avg?: Prisma.PlugScheduleAvgOrderByAggregateInput
  _max?: Prisma.PlugScheduleMaxOrderByAggregateInput
  _min?: Prisma.PlugScheduleMinOrderByAggregateInput
  _sum?: Prisma.PlugScheduleSumOrderByAggregateInput
}

export type PlugScheduleScalarWhereWithAggregatesInput = {
  AND?: Prisma.PlugScheduleScalarWhereWithAggregatesInput | Prisma.PlugScheduleScalarWhereWithAggregatesInput[]
  OR?: Prisma.PlugScheduleScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PlugScheduleScalarWhereWithAggregatesInput | Prisma.PlugScheduleScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"PlugSchedule"> | string
  api?: Prisma.StringWithAggregatesFilter<"PlugSchedule"> | string
  mechanicalIsolationEnumId?: Prisma.StringWithAggregatesFilter<"PlugSchedule"> | string
  summary?: Prisma.StringWithAggregatesFilter<"PlugSchedule"> | string
  topDepth?: Prisma.IntWithAggregatesFilter<"PlugSchedule"> | number
  bottomDepth?: Prisma.IntNullableWithAggregatesFilter<"PlugSchedule"> | number | null
  dateSet?: Prisma.DateTimeNullableWithAggregatesFilter<"PlugSchedule"> | Date | string | null
  description?: Prisma.StringWithAggregatesFilter<"PlugSchedule"> | string
  wocDetails?: Prisma.StringNullableWithAggregatesFilter<"PlugSchedule"> | string | null
  notes?: Prisma.StringNullableWithAggregatesFilter<"PlugSchedule"> | string | null
}

export type PlugScheduleCreateInput = {
  id?: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
  mechanicalIsolationEnum: Prisma.MechanicalIsolationEnumCreateNestedOneWithoutPlugScheduleInput
  well: Prisma.WellCreateNestedOneWithoutPlugSchedulesInput
  PlugCement?: Prisma.PlugCementCreateNestedManyWithoutPlugScheduleInput
}

export type PlugScheduleUncheckedCreateInput = {
  id?: string
  api: string
  mechanicalIsolationEnumId: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
  PlugCement?: Prisma.PlugCementUncheckedCreateNestedManyWithoutPlugScheduleInput
}

export type PlugScheduleUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mechanicalIsolationEnum?: Prisma.MechanicalIsolationEnumUpdateOneRequiredWithoutPlugScheduleNestedInput
  well?: Prisma.WellUpdateOneRequiredWithoutPlugSchedulesNestedInput
  PlugCement?: Prisma.PlugCementUpdateManyWithoutPlugScheduleNestedInput
}

export type PlugScheduleUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  PlugCement?: Prisma.PlugCementUncheckedUpdateManyWithoutPlugScheduleNestedInput
}

export type PlugScheduleCreateManyInput = {
  id?: string
  api: string
  mechanicalIsolationEnumId: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
}

export type PlugScheduleUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type PlugScheduleUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type PlugScheduleListRelationFilter = {
  every?: Prisma.PlugScheduleWhereInput
  some?: Prisma.PlugScheduleWhereInput
  none?: Prisma.PlugScheduleWhereInput
}

export type PlugScheduleOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PlugScheduleScalarRelationFilter = {
  is?: Prisma.PlugScheduleWhereInput
  isNot?: Prisma.PlugScheduleWhereInput
}

export type PlugScheduleCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  summary?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
  dateSet?: Prisma.SortOrder
  description?: Prisma.SortOrder
  wocDetails?: Prisma.SortOrder
  notes?: Prisma.SortOrder
}

export type PlugScheduleAvgOrderByAggregateInput = {
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
}

export type PlugScheduleMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  summary?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
  dateSet?: Prisma.SortOrder
  description?: Prisma.SortOrder
  wocDetails?: Prisma.SortOrder
  notes?: Prisma.SortOrder
}

export type PlugScheduleMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  summary?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
  dateSet?: Prisma.SortOrder
  description?: Prisma.SortOrder
  wocDetails?: Prisma.SortOrder
  notes?: Prisma.SortOrder
}

export type PlugScheduleSumOrderByAggregateInput = {
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
}

export type PlugScheduleCreateNestedManyWithoutMechanicalIsolationEnumInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput, Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput> | Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput[] | Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput[]
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput[]
  createMany?: Prisma.PlugScheduleCreateManyMechanicalIsolationEnumInputEnvelope
  connect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
}

export type PlugScheduleUncheckedCreateNestedManyWithoutMechanicalIsolationEnumInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput, Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput> | Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput[] | Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput[]
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput[]
  createMany?: Prisma.PlugScheduleCreateManyMechanicalIsolationEnumInputEnvelope
  connect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
}

export type PlugScheduleUpdateManyWithoutMechanicalIsolationEnumNestedInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput, Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput> | Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput[] | Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput[]
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput[]
  upsert?: Prisma.PlugScheduleUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput[]
  createMany?: Prisma.PlugScheduleCreateManyMechanicalIsolationEnumInputEnvelope
  set?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  disconnect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  delete?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  connect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  update?: Prisma.PlugScheduleUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput[]
  updateMany?: Prisma.PlugScheduleUpdateManyWithWhereWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleUpdateManyWithWhereWithoutMechanicalIsolationEnumInput[]
  deleteMany?: Prisma.PlugScheduleScalarWhereInput | Prisma.PlugScheduleScalarWhereInput[]
}

export type PlugScheduleUncheckedUpdateManyWithoutMechanicalIsolationEnumNestedInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput, Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput> | Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput[] | Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput[]
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput[]
  upsert?: Prisma.PlugScheduleUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput[]
  createMany?: Prisma.PlugScheduleCreateManyMechanicalIsolationEnumInputEnvelope
  set?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  disconnect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  delete?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  connect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  update?: Prisma.PlugScheduleUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput[]
  updateMany?: Prisma.PlugScheduleUpdateManyWithWhereWithoutMechanicalIsolationEnumInput | Prisma.PlugScheduleUpdateManyWithWhereWithoutMechanicalIsolationEnumInput[]
  deleteMany?: Prisma.PlugScheduleScalarWhereInput | Prisma.PlugScheduleScalarWhereInput[]
}

export type PlugScheduleCreateNestedOneWithoutPlugCementInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutPlugCementInput, Prisma.PlugScheduleUncheckedCreateWithoutPlugCementInput>
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutPlugCementInput
  connect?: Prisma.PlugScheduleWhereUniqueInput
}

export type PlugScheduleUpdateOneRequiredWithoutPlugCementNestedInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutPlugCementInput, Prisma.PlugScheduleUncheckedCreateWithoutPlugCementInput>
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutPlugCementInput
  upsert?: Prisma.PlugScheduleUpsertWithoutPlugCementInput
  connect?: Prisma.PlugScheduleWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PlugScheduleUpdateToOneWithWhereWithoutPlugCementInput, Prisma.PlugScheduleUpdateWithoutPlugCementInput>, Prisma.PlugScheduleUncheckedUpdateWithoutPlugCementInput>
}

export type PlugScheduleCreateNestedManyWithoutWellInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutWellInput, Prisma.PlugScheduleUncheckedCreateWithoutWellInput> | Prisma.PlugScheduleCreateWithoutWellInput[] | Prisma.PlugScheduleUncheckedCreateWithoutWellInput[]
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutWellInput | Prisma.PlugScheduleCreateOrConnectWithoutWellInput[]
  createMany?: Prisma.PlugScheduleCreateManyWellInputEnvelope
  connect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
}

export type PlugScheduleUncheckedCreateNestedManyWithoutWellInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutWellInput, Prisma.PlugScheduleUncheckedCreateWithoutWellInput> | Prisma.PlugScheduleCreateWithoutWellInput[] | Prisma.PlugScheduleUncheckedCreateWithoutWellInput[]
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutWellInput | Prisma.PlugScheduleCreateOrConnectWithoutWellInput[]
  createMany?: Prisma.PlugScheduleCreateManyWellInputEnvelope
  connect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
}

export type PlugScheduleUpdateManyWithoutWellNestedInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutWellInput, Prisma.PlugScheduleUncheckedCreateWithoutWellInput> | Prisma.PlugScheduleCreateWithoutWellInput[] | Prisma.PlugScheduleUncheckedCreateWithoutWellInput[]
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutWellInput | Prisma.PlugScheduleCreateOrConnectWithoutWellInput[]
  upsert?: Prisma.PlugScheduleUpsertWithWhereUniqueWithoutWellInput | Prisma.PlugScheduleUpsertWithWhereUniqueWithoutWellInput[]
  createMany?: Prisma.PlugScheduleCreateManyWellInputEnvelope
  set?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  disconnect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  delete?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  connect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  update?: Prisma.PlugScheduleUpdateWithWhereUniqueWithoutWellInput | Prisma.PlugScheduleUpdateWithWhereUniqueWithoutWellInput[]
  updateMany?: Prisma.PlugScheduleUpdateManyWithWhereWithoutWellInput | Prisma.PlugScheduleUpdateManyWithWhereWithoutWellInput[]
  deleteMany?: Prisma.PlugScheduleScalarWhereInput | Prisma.PlugScheduleScalarWhereInput[]
}

export type PlugScheduleUncheckedUpdateManyWithoutWellNestedInput = {
  create?: Prisma.XOR<Prisma.PlugScheduleCreateWithoutWellInput, Prisma.PlugScheduleUncheckedCreateWithoutWellInput> | Prisma.PlugScheduleCreateWithoutWellInput[] | Prisma.PlugScheduleUncheckedCreateWithoutWellInput[]
  connectOrCreate?: Prisma.PlugScheduleCreateOrConnectWithoutWellInput | Prisma.PlugScheduleCreateOrConnectWithoutWellInput[]
  upsert?: Prisma.PlugScheduleUpsertWithWhereUniqueWithoutWellInput | Prisma.PlugScheduleUpsertWithWhereUniqueWithoutWellInput[]
  createMany?: Prisma.PlugScheduleCreateManyWellInputEnvelope
  set?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  disconnect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  delete?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  connect?: Prisma.PlugScheduleWhereUniqueInput | Prisma.PlugScheduleWhereUniqueInput[]
  update?: Prisma.PlugScheduleUpdateWithWhereUniqueWithoutWellInput | Prisma.PlugScheduleUpdateWithWhereUniqueWithoutWellInput[]
  updateMany?: Prisma.PlugScheduleUpdateManyWithWhereWithoutWellInput | Prisma.PlugScheduleUpdateManyWithWhereWithoutWellInput[]
  deleteMany?: Prisma.PlugScheduleScalarWhereInput | Prisma.PlugScheduleScalarWhereInput[]
}

export type PlugScheduleCreateWithoutMechanicalIsolationEnumInput = {
  id?: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
  well: Prisma.WellCreateNestedOneWithoutPlugSchedulesInput
  PlugCement?: Prisma.PlugCementCreateNestedManyWithoutPlugScheduleInput
}

export type PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput = {
  id?: string
  api: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
  PlugCement?: Prisma.PlugCementUncheckedCreateNestedManyWithoutPlugScheduleInput
}

export type PlugScheduleCreateOrConnectWithoutMechanicalIsolationEnumInput = {
  where: Prisma.PlugScheduleWhereUniqueInput
  create: Prisma.XOR<Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput, Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput>
}

export type PlugScheduleCreateManyMechanicalIsolationEnumInputEnvelope = {
  data: Prisma.PlugScheduleCreateManyMechanicalIsolationEnumInput | Prisma.PlugScheduleCreateManyMechanicalIsolationEnumInput[]
}

export type PlugScheduleUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput = {
  where: Prisma.PlugScheduleWhereUniqueInput
  update: Prisma.XOR<Prisma.PlugScheduleUpdateWithoutMechanicalIsolationEnumInput, Prisma.PlugScheduleUncheckedUpdateWithoutMechanicalIsolationEnumInput>
  create: Prisma.XOR<Prisma.PlugScheduleCreateWithoutMechanicalIsolationEnumInput, Prisma.PlugScheduleUncheckedCreateWithoutMechanicalIsolationEnumInput>
}

export type PlugScheduleUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput = {
  where: Prisma.PlugScheduleWhereUniqueInput
  data: Prisma.XOR<Prisma.PlugScheduleUpdateWithoutMechanicalIsolationEnumInput, Prisma.PlugScheduleUncheckedUpdateWithoutMechanicalIsolationEnumInput>
}

export type PlugScheduleUpdateManyWithWhereWithoutMechanicalIsolationEnumInput = {
  where: Prisma.PlugScheduleScalarWhereInput
  data: Prisma.XOR<Prisma.PlugScheduleUpdateManyMutationInput, Prisma.PlugScheduleUncheckedUpdateManyWithoutMechanicalIsolationEnumInput>
}

export type PlugScheduleScalarWhereInput = {
  AND?: Prisma.PlugScheduleScalarWhereInput | Prisma.PlugScheduleScalarWhereInput[]
  OR?: Prisma.PlugScheduleScalarWhereInput[]
  NOT?: Prisma.PlugScheduleScalarWhereInput | Prisma.PlugScheduleScalarWhereInput[]
  id?: Prisma.StringFilter<"PlugSchedule"> | string
  api?: Prisma.StringFilter<"PlugSchedule"> | string
  mechanicalIsolationEnumId?: Prisma.StringFilter<"PlugSchedule"> | string
  summary?: Prisma.StringFilter<"PlugSchedule"> | string
  topDepth?: Prisma.IntFilter<"PlugSchedule"> | number
  bottomDepth?: Prisma.IntNullableFilter<"PlugSchedule"> | number | null
  dateSet?: Prisma.DateTimeNullableFilter<"PlugSchedule"> | Date | string | null
  description?: Prisma.StringFilter<"PlugSchedule"> | string
  wocDetails?: Prisma.StringNullableFilter<"PlugSchedule"> | string | null
  notes?: Prisma.StringNullableFilter<"PlugSchedule"> | string | null
}

export type PlugScheduleCreateWithoutPlugCementInput = {
  id?: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
  mechanicalIsolationEnum: Prisma.MechanicalIsolationEnumCreateNestedOneWithoutPlugScheduleInput
  well: Prisma.WellCreateNestedOneWithoutPlugSchedulesInput
}

export type PlugScheduleUncheckedCreateWithoutPlugCementInput = {
  id?: string
  api: string
  mechanicalIsolationEnumId: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
}

export type PlugScheduleCreateOrConnectWithoutPlugCementInput = {
  where: Prisma.PlugScheduleWhereUniqueInput
  create: Prisma.XOR<Prisma.PlugScheduleCreateWithoutPlugCementInput, Prisma.PlugScheduleUncheckedCreateWithoutPlugCementInput>
}

export type PlugScheduleUpsertWithoutPlugCementInput = {
  update: Prisma.XOR<Prisma.PlugScheduleUpdateWithoutPlugCementInput, Prisma.PlugScheduleUncheckedUpdateWithoutPlugCementInput>
  create: Prisma.XOR<Prisma.PlugScheduleCreateWithoutPlugCementInput, Prisma.PlugScheduleUncheckedCreateWithoutPlugCementInput>
  where?: Prisma.PlugScheduleWhereInput
}

export type PlugScheduleUpdateToOneWithWhereWithoutPlugCementInput = {
  where?: Prisma.PlugScheduleWhereInput
  data: Prisma.XOR<Prisma.PlugScheduleUpdateWithoutPlugCementInput, Prisma.PlugScheduleUncheckedUpdateWithoutPlugCementInput>
}

export type PlugScheduleUpdateWithoutPlugCementInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mechanicalIsolationEnum?: Prisma.MechanicalIsolationEnumUpdateOneRequiredWithoutPlugScheduleNestedInput
  well?: Prisma.WellUpdateOneRequiredWithoutPlugSchedulesNestedInput
}

export type PlugScheduleUncheckedUpdateWithoutPlugCementInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type PlugScheduleCreateWithoutWellInput = {
  id?: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
  mechanicalIsolationEnum: Prisma.MechanicalIsolationEnumCreateNestedOneWithoutPlugScheduleInput
  PlugCement?: Prisma.PlugCementCreateNestedManyWithoutPlugScheduleInput
}

export type PlugScheduleUncheckedCreateWithoutWellInput = {
  id?: string
  mechanicalIsolationEnumId: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
  PlugCement?: Prisma.PlugCementUncheckedCreateNestedManyWithoutPlugScheduleInput
}

export type PlugScheduleCreateOrConnectWithoutWellInput = {
  where: Prisma.PlugScheduleWhereUniqueInput
  create: Prisma.XOR<Prisma.PlugScheduleCreateWithoutWellInput, Prisma.PlugScheduleUncheckedCreateWithoutWellInput>
}

export type PlugScheduleCreateManyWellInputEnvelope = {
  data: Prisma.PlugScheduleCreateManyWellInput | Prisma.PlugScheduleCreateManyWellInput[]
}

export type PlugScheduleUpsertWithWhereUniqueWithoutWellInput = {
  where: Prisma.PlugScheduleWhereUniqueInput
  update: Prisma.XOR<Prisma.PlugScheduleUpdateWithoutWellInput, Prisma.PlugScheduleUncheckedUpdateWithoutWellInput>
  create: Prisma.XOR<Prisma.PlugScheduleCreateWithoutWellInput, Prisma.PlugScheduleUncheckedCreateWithoutWellInput>
}

export type PlugScheduleUpdateWithWhereUniqueWithoutWellInput = {
  where: Prisma.PlugScheduleWhereUniqueInput
  data: Prisma.XOR<Prisma.PlugScheduleUpdateWithoutWellInput, Prisma.PlugScheduleUncheckedUpdateWithoutWellInput>
}

export type PlugScheduleUpdateManyWithWhereWithoutWellInput = {
  where: Prisma.PlugScheduleScalarWhereInput
  data: Prisma.XOR<Prisma.PlugScheduleUpdateManyMutationInput, Prisma.PlugScheduleUncheckedUpdateManyWithoutWellInput>
}

export type PlugScheduleCreateManyMechanicalIsolationEnumInput = {
  id?: string
  api: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
}

export type PlugScheduleUpdateWithoutMechanicalIsolationEnumInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  well?: Prisma.WellUpdateOneRequiredWithoutPlugSchedulesNestedInput
  PlugCement?: Prisma.PlugCementUpdateManyWithoutPlugScheduleNestedInput
}

export type PlugScheduleUncheckedUpdateWithoutMechanicalIsolationEnumInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  PlugCement?: Prisma.PlugCementUncheckedUpdateManyWithoutPlugScheduleNestedInput
}

export type PlugScheduleUncheckedUpdateManyWithoutMechanicalIsolationEnumInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type PlugScheduleCreateManyWellInput = {
  id?: string
  mechanicalIsolationEnumId: string
  summary: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  description: string
  wocDetails?: string | null
  notes?: string | null
}

export type PlugScheduleUpdateWithoutWellInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mechanicalIsolationEnum?: Prisma.MechanicalIsolationEnumUpdateOneRequiredWithoutPlugScheduleNestedInput
  PlugCement?: Prisma.PlugCementUpdateManyWithoutPlugScheduleNestedInput
}

export type PlugScheduleUncheckedUpdateWithoutWellInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  PlugCement?: Prisma.PlugCementUncheckedUpdateManyWithoutPlugScheduleNestedInput
}

export type PlugScheduleUncheckedUpdateManyWithoutWellInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
  wocDetails?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}


/**
 * Count Type PlugScheduleCountOutputType
 */

export type PlugScheduleCountOutputType = {
  PlugCement: number
}

export type PlugScheduleCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  PlugCement?: boolean | PlugScheduleCountOutputTypeCountPlugCementArgs
}

/**
 * PlugScheduleCountOutputType without action
 */
export type PlugScheduleCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugScheduleCountOutputType
   */
  select?: Prisma.PlugScheduleCountOutputTypeSelect<ExtArgs> | null
}

/**
 * PlugScheduleCountOutputType without action
 */
export type PlugScheduleCountOutputTypeCountPlugCementArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PlugCementWhereInput
}


export type PlugScheduleSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  api?: boolean
  mechanicalIsolationEnumId?: boolean
  summary?: boolean
  topDepth?: boolean
  bottomDepth?: boolean
  dateSet?: boolean
  description?: boolean
  wocDetails?: boolean
  notes?: boolean
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
  PlugCement?: boolean | Prisma.PlugSchedule$PlugCementArgs<ExtArgs>
  _count?: boolean | Prisma.PlugScheduleCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["plugSchedule"]>

export type PlugScheduleSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  api?: boolean
  mechanicalIsolationEnumId?: boolean
  summary?: boolean
  topDepth?: boolean
  bottomDepth?: boolean
  dateSet?: boolean
  description?: boolean
  wocDetails?: boolean
  notes?: boolean
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}, ExtArgs["result"]["plugSchedule"]>

export type PlugScheduleSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  api?: boolean
  mechanicalIsolationEnumId?: boolean
  summary?: boolean
  topDepth?: boolean
  bottomDepth?: boolean
  dateSet?: boolean
  description?: boolean
  wocDetails?: boolean
  notes?: boolean
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}, ExtArgs["result"]["plugSchedule"]>

export type PlugScheduleSelectScalar = {
  id?: boolean
  api?: boolean
  mechanicalIsolationEnumId?: boolean
  summary?: boolean
  topDepth?: boolean
  bottomDepth?: boolean
  dateSet?: boolean
  description?: boolean
  wocDetails?: boolean
  notes?: boolean
}

export type PlugScheduleOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "api" | "mechanicalIsolationEnumId" | "summary" | "topDepth" | "bottomDepth" | "dateSet" | "description" | "wocDetails" | "notes", ExtArgs["result"]["plugSchedule"]>
export type PlugScheduleInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
  PlugCement?: boolean | Prisma.PlugSchedule$PlugCementArgs<ExtArgs>
  _count?: boolean | Prisma.PlugScheduleCountOutputTypeDefaultArgs<ExtArgs>
}
export type PlugScheduleIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}
export type PlugScheduleIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}

export type $PlugSchedulePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PlugSchedule"
  objects: {
    mechanicalIsolationEnum: Prisma.$MechanicalIsolationEnumPayload<ExtArgs>
    well: Prisma.$WellPayload<ExtArgs>
    PlugCement: Prisma.$PlugCementPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    api: string
    mechanicalIsolationEnumId: string
    summary: string
    topDepth: number
    bottomDepth: number | null
    dateSet: Date | null
    description: string
    wocDetails: string | null
    notes: string | null
  }, ExtArgs["result"]["plugSchedule"]>
  composites: {}
}

export type PlugScheduleGetPayload<S extends boolean | null | undefined | PlugScheduleDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload, S>

export type PlugScheduleCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PlugScheduleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PlugScheduleCountAggregateInputType | true
  }

export interface PlugScheduleDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PlugSchedule'], meta: { name: 'PlugSchedule' } }
  /**
   * Find zero or one PlugSchedule that matches the filter.
   * @param {PlugScheduleFindUniqueArgs} args - Arguments to find a PlugSchedule
   * @example
   * // Get one PlugSchedule
   * const plugSchedule = await prisma.plugSchedule.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PlugScheduleFindUniqueArgs>(args: Prisma.SelectSubset<T, PlugScheduleFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PlugScheduleClient<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PlugSchedule that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PlugScheduleFindUniqueOrThrowArgs} args - Arguments to find a PlugSchedule
   * @example
   * // Get one PlugSchedule
   * const plugSchedule = await prisma.plugSchedule.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PlugScheduleFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PlugScheduleFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PlugScheduleClient<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PlugSchedule that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlugScheduleFindFirstArgs} args - Arguments to find a PlugSchedule
   * @example
   * // Get one PlugSchedule
   * const plugSchedule = await prisma.plugSchedule.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PlugScheduleFindFirstArgs>(args?: Prisma.SelectSubset<T, PlugScheduleFindFirstArgs<ExtArgs>>): Prisma.Prisma__PlugScheduleClient<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PlugSchedule that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlugScheduleFindFirstOrThrowArgs} args - Arguments to find a PlugSchedule
   * @example
   * // Get one PlugSchedule
   * const plugSchedule = await prisma.plugSchedule.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PlugScheduleFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PlugScheduleFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PlugScheduleClient<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PlugSchedules that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlugScheduleFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PlugSchedules
   * const plugSchedules = await prisma.plugSchedule.findMany()
   * 
   * // Get first 10 PlugSchedules
   * const plugSchedules = await prisma.plugSchedule.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const plugScheduleWithIdOnly = await prisma.plugSchedule.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PlugScheduleFindManyArgs>(args?: Prisma.SelectSubset<T, PlugScheduleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PlugSchedule.
   * @param {PlugScheduleCreateArgs} args - Arguments to create a PlugSchedule.
   * @example
   * // Create one PlugSchedule
   * const PlugSchedule = await prisma.plugSchedule.create({
   *   data: {
   *     // ... data to create a PlugSchedule
   *   }
   * })
   * 
   */
  create<T extends PlugScheduleCreateArgs>(args: Prisma.SelectSubset<T, PlugScheduleCreateArgs<ExtArgs>>): Prisma.Prisma__PlugScheduleClient<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PlugSchedules.
   * @param {PlugScheduleCreateManyArgs} args - Arguments to create many PlugSchedules.
   * @example
   * // Create many PlugSchedules
   * const plugSchedule = await prisma.plugSchedule.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PlugScheduleCreateManyArgs>(args?: Prisma.SelectSubset<T, PlugScheduleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PlugSchedules and returns the data saved in the database.
   * @param {PlugScheduleCreateManyAndReturnArgs} args - Arguments to create many PlugSchedules.
   * @example
   * // Create many PlugSchedules
   * const plugSchedule = await prisma.plugSchedule.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PlugSchedules and only return the `id`
   * const plugScheduleWithIdOnly = await prisma.plugSchedule.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PlugScheduleCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PlugScheduleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PlugSchedule.
   * @param {PlugScheduleDeleteArgs} args - Arguments to delete one PlugSchedule.
   * @example
   * // Delete one PlugSchedule
   * const PlugSchedule = await prisma.plugSchedule.delete({
   *   where: {
   *     // ... filter to delete one PlugSchedule
   *   }
   * })
   * 
   */
  delete<T extends PlugScheduleDeleteArgs>(args: Prisma.SelectSubset<T, PlugScheduleDeleteArgs<ExtArgs>>): Prisma.Prisma__PlugScheduleClient<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PlugSchedule.
   * @param {PlugScheduleUpdateArgs} args - Arguments to update one PlugSchedule.
   * @example
   * // Update one PlugSchedule
   * const plugSchedule = await prisma.plugSchedule.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PlugScheduleUpdateArgs>(args: Prisma.SelectSubset<T, PlugScheduleUpdateArgs<ExtArgs>>): Prisma.Prisma__PlugScheduleClient<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PlugSchedules.
   * @param {PlugScheduleDeleteManyArgs} args - Arguments to filter PlugSchedules to delete.
   * @example
   * // Delete a few PlugSchedules
   * const { count } = await prisma.plugSchedule.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PlugScheduleDeleteManyArgs>(args?: Prisma.SelectSubset<T, PlugScheduleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PlugSchedules.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlugScheduleUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PlugSchedules
   * const plugSchedule = await prisma.plugSchedule.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PlugScheduleUpdateManyArgs>(args: Prisma.SelectSubset<T, PlugScheduleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PlugSchedules and returns the data updated in the database.
   * @param {PlugScheduleUpdateManyAndReturnArgs} args - Arguments to update many PlugSchedules.
   * @example
   * // Update many PlugSchedules
   * const plugSchedule = await prisma.plugSchedule.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PlugSchedules and only return the `id`
   * const plugScheduleWithIdOnly = await prisma.plugSchedule.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PlugScheduleUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PlugScheduleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PlugSchedule.
   * @param {PlugScheduleUpsertArgs} args - Arguments to update or create a PlugSchedule.
   * @example
   * // Update or create a PlugSchedule
   * const plugSchedule = await prisma.plugSchedule.upsert({
   *   create: {
   *     // ... data to create a PlugSchedule
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PlugSchedule we want to update
   *   }
   * })
   */
  upsert<T extends PlugScheduleUpsertArgs>(args: Prisma.SelectSubset<T, PlugScheduleUpsertArgs<ExtArgs>>): Prisma.Prisma__PlugScheduleClient<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PlugSchedules.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlugScheduleCountArgs} args - Arguments to filter PlugSchedules to count.
   * @example
   * // Count the number of PlugSchedules
   * const count = await prisma.plugSchedule.count({
   *   where: {
   *     // ... the filter for the PlugSchedules we want to count
   *   }
   * })
  **/
  count<T extends PlugScheduleCountArgs>(
    args?: Prisma.Subset<T, PlugScheduleCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PlugScheduleCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PlugSchedule.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlugScheduleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PlugScheduleAggregateArgs>(args: Prisma.Subset<T, PlugScheduleAggregateArgs>): Prisma.PrismaPromise<GetPlugScheduleAggregateType<T>>

  /**
   * Group by PlugSchedule.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlugScheduleGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PlugScheduleGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PlugScheduleGroupByArgs['orderBy'] }
      : { orderBy?: PlugScheduleGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PlugScheduleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlugScheduleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PlugSchedule model
 */
readonly fields: PlugScheduleFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PlugSchedule.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PlugScheduleClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  mechanicalIsolationEnum<T extends Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  well<T extends Prisma.WellDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WellDefaultArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  PlugCement<T extends Prisma.PlugSchedule$PlugCementArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PlugSchedule$PlugCementArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlugCementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PlugSchedule model
 */
export interface PlugScheduleFieldRefs {
  readonly id: Prisma.FieldRef<"PlugSchedule", 'String'>
  readonly api: Prisma.FieldRef<"PlugSchedule", 'String'>
  readonly mechanicalIsolationEnumId: Prisma.FieldRef<"PlugSchedule", 'String'>
  readonly summary: Prisma.FieldRef<"PlugSchedule", 'String'>
  readonly topDepth: Prisma.FieldRef<"PlugSchedule", 'Int'>
  readonly bottomDepth: Prisma.FieldRef<"PlugSchedule", 'Int'>
  readonly dateSet: Prisma.FieldRef<"PlugSchedule", 'DateTime'>
  readonly description: Prisma.FieldRef<"PlugSchedule", 'String'>
  readonly wocDetails: Prisma.FieldRef<"PlugSchedule", 'String'>
  readonly notes: Prisma.FieldRef<"PlugSchedule", 'String'>
}
    

// Custom InputTypes
/**
 * PlugSchedule findUnique
 */
export type PlugScheduleFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * Filter, which PlugSchedule to fetch.
   */
  where: Prisma.PlugScheduleWhereUniqueInput
}

/**
 * PlugSchedule findUniqueOrThrow
 */
export type PlugScheduleFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * Filter, which PlugSchedule to fetch.
   */
  where: Prisma.PlugScheduleWhereUniqueInput
}

/**
 * PlugSchedule findFirst
 */
export type PlugScheduleFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * Filter, which PlugSchedule to fetch.
   */
  where?: Prisma.PlugScheduleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PlugSchedules to fetch.
   */
  orderBy?: Prisma.PlugScheduleOrderByWithRelationInput | Prisma.PlugScheduleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PlugSchedules.
   */
  cursor?: Prisma.PlugScheduleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PlugSchedules from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PlugSchedules.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PlugSchedules.
   */
  distinct?: Prisma.PlugScheduleScalarFieldEnum | Prisma.PlugScheduleScalarFieldEnum[]
}

/**
 * PlugSchedule findFirstOrThrow
 */
export type PlugScheduleFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * Filter, which PlugSchedule to fetch.
   */
  where?: Prisma.PlugScheduleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PlugSchedules to fetch.
   */
  orderBy?: Prisma.PlugScheduleOrderByWithRelationInput | Prisma.PlugScheduleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PlugSchedules.
   */
  cursor?: Prisma.PlugScheduleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PlugSchedules from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PlugSchedules.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PlugSchedules.
   */
  distinct?: Prisma.PlugScheduleScalarFieldEnum | Prisma.PlugScheduleScalarFieldEnum[]
}

/**
 * PlugSchedule findMany
 */
export type PlugScheduleFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * Filter, which PlugSchedules to fetch.
   */
  where?: Prisma.PlugScheduleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PlugSchedules to fetch.
   */
  orderBy?: Prisma.PlugScheduleOrderByWithRelationInput | Prisma.PlugScheduleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PlugSchedules.
   */
  cursor?: Prisma.PlugScheduleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PlugSchedules from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PlugSchedules.
   */
  skip?: number
  distinct?: Prisma.PlugScheduleScalarFieldEnum | Prisma.PlugScheduleScalarFieldEnum[]
}

/**
 * PlugSchedule create
 */
export type PlugScheduleCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * The data needed to create a PlugSchedule.
   */
  data: Prisma.XOR<Prisma.PlugScheduleCreateInput, Prisma.PlugScheduleUncheckedCreateInput>
}

/**
 * PlugSchedule createMany
 */
export type PlugScheduleCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PlugSchedules.
   */
  data: Prisma.PlugScheduleCreateManyInput | Prisma.PlugScheduleCreateManyInput[]
}

/**
 * PlugSchedule createManyAndReturn
 */
export type PlugScheduleCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * The data used to create many PlugSchedules.
   */
  data: Prisma.PlugScheduleCreateManyInput | Prisma.PlugScheduleCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * PlugSchedule update
 */
export type PlugScheduleUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * The data needed to update a PlugSchedule.
   */
  data: Prisma.XOR<Prisma.PlugScheduleUpdateInput, Prisma.PlugScheduleUncheckedUpdateInput>
  /**
   * Choose, which PlugSchedule to update.
   */
  where: Prisma.PlugScheduleWhereUniqueInput
}

/**
 * PlugSchedule updateMany
 */
export type PlugScheduleUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PlugSchedules.
   */
  data: Prisma.XOR<Prisma.PlugScheduleUpdateManyMutationInput, Prisma.PlugScheduleUncheckedUpdateManyInput>
  /**
   * Filter which PlugSchedules to update
   */
  where?: Prisma.PlugScheduleWhereInput
  /**
   * Limit how many PlugSchedules to update.
   */
  limit?: number
}

/**
 * PlugSchedule updateManyAndReturn
 */
export type PlugScheduleUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * The data used to update PlugSchedules.
   */
  data: Prisma.XOR<Prisma.PlugScheduleUpdateManyMutationInput, Prisma.PlugScheduleUncheckedUpdateManyInput>
  /**
   * Filter which PlugSchedules to update
   */
  where?: Prisma.PlugScheduleWhereInput
  /**
   * Limit how many PlugSchedules to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * PlugSchedule upsert
 */
export type PlugScheduleUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * The filter to search for the PlugSchedule to update in case it exists.
   */
  where: Prisma.PlugScheduleWhereUniqueInput
  /**
   * In case the PlugSchedule found by the `where` argument doesn't exist, create a new PlugSchedule with this data.
   */
  create: Prisma.XOR<Prisma.PlugScheduleCreateInput, Prisma.PlugScheduleUncheckedCreateInput>
  /**
   * In case the PlugSchedule was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PlugScheduleUpdateInput, Prisma.PlugScheduleUncheckedUpdateInput>
}

/**
 * PlugSchedule delete
 */
export type PlugScheduleDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  /**
   * Filter which PlugSchedule to delete.
   */
  where: Prisma.PlugScheduleWhereUniqueInput
}

/**
 * PlugSchedule deleteMany
 */
export type PlugScheduleDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PlugSchedules to delete
   */
  where?: Prisma.PlugScheduleWhereInput
  /**
   * Limit how many PlugSchedules to delete.
   */
  limit?: number
}

/**
 * PlugSchedule.PlugCement
 */
export type PlugSchedule$PlugCementArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugCement
   */
  select?: Prisma.PlugCementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugCement
   */
  omit?: Prisma.PlugCementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugCementInclude<ExtArgs> | null
  where?: Prisma.PlugCementWhereInput
  orderBy?: Prisma.PlugCementOrderByWithRelationInput | Prisma.PlugCementOrderByWithRelationInput[]
  cursor?: Prisma.PlugCementWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PlugCementScalarFieldEnum | Prisma.PlugCementScalarFieldEnum[]
}

/**
 * PlugSchedule without action
 */
export type PlugScheduleDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
}

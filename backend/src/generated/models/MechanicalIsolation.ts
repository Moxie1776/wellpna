
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `MechanicalIsolation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model MechanicalIsolation
 * 
 */
export type MechanicalIsolationModel = runtime.Types.Result.DefaultSelection<Prisma.$MechanicalIsolationPayload>

export type AggregateMechanicalIsolation = {
  _count: MechanicalIsolationCountAggregateOutputType | null
  _avg: MechanicalIsolationAvgAggregateOutputType | null
  _sum: MechanicalIsolationSumAggregateOutputType | null
  _min: MechanicalIsolationMinAggregateOutputType | null
  _max: MechanicalIsolationMaxAggregateOutputType | null
}

export type MechanicalIsolationAvgAggregateOutputType = {
  topDepth: number | null
  bottomDepth: number | null
}

export type MechanicalIsolationSumAggregateOutputType = {
  topDepth: number | null
  bottomDepth: number | null
}

export type MechanicalIsolationMinAggregateOutputType = {
  id: string | null
  api: string | null
  mechanicalIsolationEnumId: string | null
  topDepth: number | null
  bottomDepth: number | null
  dateSet: Date | null
}

export type MechanicalIsolationMaxAggregateOutputType = {
  id: string | null
  api: string | null
  mechanicalIsolationEnumId: string | null
  topDepth: number | null
  bottomDepth: number | null
  dateSet: Date | null
}

export type MechanicalIsolationCountAggregateOutputType = {
  id: number
  api: number
  mechanicalIsolationEnumId: number
  topDepth: number
  bottomDepth: number
  dateSet: number
  _all: number
}


export type MechanicalIsolationAvgAggregateInputType = {
  topDepth?: true
  bottomDepth?: true
}

export type MechanicalIsolationSumAggregateInputType = {
  topDepth?: true
  bottomDepth?: true
}

export type MechanicalIsolationMinAggregateInputType = {
  id?: true
  api?: true
  mechanicalIsolationEnumId?: true
  topDepth?: true
  bottomDepth?: true
  dateSet?: true
}

export type MechanicalIsolationMaxAggregateInputType = {
  id?: true
  api?: true
  mechanicalIsolationEnumId?: true
  topDepth?: true
  bottomDepth?: true
  dateSet?: true
}

export type MechanicalIsolationCountAggregateInputType = {
  id?: true
  api?: true
  mechanicalIsolationEnumId?: true
  topDepth?: true
  bottomDepth?: true
  dateSet?: true
  _all?: true
}

export type MechanicalIsolationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MechanicalIsolation to aggregate.
   */
  where?: Prisma.MechanicalIsolationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MechanicalIsolations to fetch.
   */
  orderBy?: Prisma.MechanicalIsolationOrderByWithRelationInput | Prisma.MechanicalIsolationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MechanicalIsolationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MechanicalIsolations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MechanicalIsolations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned MechanicalIsolations
  **/
  _count?: true | MechanicalIsolationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MechanicalIsolationAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MechanicalIsolationSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MechanicalIsolationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MechanicalIsolationMaxAggregateInputType
}

export type GetMechanicalIsolationAggregateType<T extends MechanicalIsolationAggregateArgs> = {
      [P in keyof T & keyof AggregateMechanicalIsolation]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMechanicalIsolation[P]>
    : Prisma.GetScalarType<T[P], AggregateMechanicalIsolation[P]>
}




export type MechanicalIsolationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MechanicalIsolationWhereInput
  orderBy?: Prisma.MechanicalIsolationOrderByWithAggregationInput | Prisma.MechanicalIsolationOrderByWithAggregationInput[]
  by: Prisma.MechanicalIsolationScalarFieldEnum[] | Prisma.MechanicalIsolationScalarFieldEnum
  having?: Prisma.MechanicalIsolationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MechanicalIsolationCountAggregateInputType | true
  _avg?: MechanicalIsolationAvgAggregateInputType
  _sum?: MechanicalIsolationSumAggregateInputType
  _min?: MechanicalIsolationMinAggregateInputType
  _max?: MechanicalIsolationMaxAggregateInputType
}

export type MechanicalIsolationGroupByOutputType = {
  id: string
  api: string
  mechanicalIsolationEnumId: string
  topDepth: number
  bottomDepth: number | null
  dateSet: Date | null
  _count: MechanicalIsolationCountAggregateOutputType | null
  _avg: MechanicalIsolationAvgAggregateOutputType | null
  _sum: MechanicalIsolationSumAggregateOutputType | null
  _min: MechanicalIsolationMinAggregateOutputType | null
  _max: MechanicalIsolationMaxAggregateOutputType | null
}

type GetMechanicalIsolationGroupByPayload<T extends MechanicalIsolationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MechanicalIsolationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MechanicalIsolationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MechanicalIsolationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MechanicalIsolationGroupByOutputType[P]>
      }
    >
  >



export type MechanicalIsolationWhereInput = {
  AND?: Prisma.MechanicalIsolationWhereInput | Prisma.MechanicalIsolationWhereInput[]
  OR?: Prisma.MechanicalIsolationWhereInput[]
  NOT?: Prisma.MechanicalIsolationWhereInput | Prisma.MechanicalIsolationWhereInput[]
  id?: Prisma.StringFilter<"MechanicalIsolation"> | string
  api?: Prisma.StringFilter<"MechanicalIsolation"> | string
  mechanicalIsolationEnumId?: Prisma.StringFilter<"MechanicalIsolation"> | string
  topDepth?: Prisma.IntFilter<"MechanicalIsolation"> | number
  bottomDepth?: Prisma.IntNullableFilter<"MechanicalIsolation"> | number | null
  dateSet?: Prisma.DateTimeNullableFilter<"MechanicalIsolation"> | Date | string | null
  mechanicalIsolationEnum?: Prisma.XOR<Prisma.MechanicalIsolationEnumScalarRelationFilter, Prisma.MechanicalIsolationEnumWhereInput>
  well?: Prisma.XOR<Prisma.WellScalarRelationFilter, Prisma.WellWhereInput>
}

export type MechanicalIsolationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrderInput | Prisma.SortOrder
  dateSet?: Prisma.SortOrderInput | Prisma.SortOrder
  mechanicalIsolationEnum?: Prisma.MechanicalIsolationEnumOrderByWithRelationInput
  well?: Prisma.WellOrderByWithRelationInput
}

export type MechanicalIsolationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.MechanicalIsolationWhereInput | Prisma.MechanicalIsolationWhereInput[]
  OR?: Prisma.MechanicalIsolationWhereInput[]
  NOT?: Prisma.MechanicalIsolationWhereInput | Prisma.MechanicalIsolationWhereInput[]
  api?: Prisma.StringFilter<"MechanicalIsolation"> | string
  mechanicalIsolationEnumId?: Prisma.StringFilter<"MechanicalIsolation"> | string
  topDepth?: Prisma.IntFilter<"MechanicalIsolation"> | number
  bottomDepth?: Prisma.IntNullableFilter<"MechanicalIsolation"> | number | null
  dateSet?: Prisma.DateTimeNullableFilter<"MechanicalIsolation"> | Date | string | null
  mechanicalIsolationEnum?: Prisma.XOR<Prisma.MechanicalIsolationEnumScalarRelationFilter, Prisma.MechanicalIsolationEnumWhereInput>
  well?: Prisma.XOR<Prisma.WellScalarRelationFilter, Prisma.WellWhereInput>
}, "id">

export type MechanicalIsolationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrderInput | Prisma.SortOrder
  dateSet?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.MechanicalIsolationCountOrderByAggregateInput
  _avg?: Prisma.MechanicalIsolationAvgOrderByAggregateInput
  _max?: Prisma.MechanicalIsolationMaxOrderByAggregateInput
  _min?: Prisma.MechanicalIsolationMinOrderByAggregateInput
  _sum?: Prisma.MechanicalIsolationSumOrderByAggregateInput
}

export type MechanicalIsolationScalarWhereWithAggregatesInput = {
  AND?: Prisma.MechanicalIsolationScalarWhereWithAggregatesInput | Prisma.MechanicalIsolationScalarWhereWithAggregatesInput[]
  OR?: Prisma.MechanicalIsolationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MechanicalIsolationScalarWhereWithAggregatesInput | Prisma.MechanicalIsolationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"MechanicalIsolation"> | string
  api?: Prisma.StringWithAggregatesFilter<"MechanicalIsolation"> | string
  mechanicalIsolationEnumId?: Prisma.StringWithAggregatesFilter<"MechanicalIsolation"> | string
  topDepth?: Prisma.IntWithAggregatesFilter<"MechanicalIsolation"> | number
  bottomDepth?: Prisma.IntNullableWithAggregatesFilter<"MechanicalIsolation"> | number | null
  dateSet?: Prisma.DateTimeNullableWithAggregatesFilter<"MechanicalIsolation"> | Date | string | null
}

export type MechanicalIsolationCreateInput = {
  id?: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  mechanicalIsolationEnum: Prisma.MechanicalIsolationEnumCreateNestedOneWithoutMechanicalIsolationInput
  well: Prisma.WellCreateNestedOneWithoutMechanicalIsolationInput
}

export type MechanicalIsolationUncheckedCreateInput = {
  id?: string
  api: string
  mechanicalIsolationEnumId: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
}

export type MechanicalIsolationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  mechanicalIsolationEnum?: Prisma.MechanicalIsolationEnumUpdateOneRequiredWithoutMechanicalIsolationNestedInput
  well?: Prisma.WellUpdateOneRequiredWithoutMechanicalIsolationNestedInput
}

export type MechanicalIsolationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type MechanicalIsolationCreateManyInput = {
  id?: string
  api: string
  mechanicalIsolationEnumId: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
}

export type MechanicalIsolationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type MechanicalIsolationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type MechanicalIsolationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
  dateSet?: Prisma.SortOrder
}

export type MechanicalIsolationAvgOrderByAggregateInput = {
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
}

export type MechanicalIsolationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
  dateSet?: Prisma.SortOrder
}

export type MechanicalIsolationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  api?: Prisma.SortOrder
  mechanicalIsolationEnumId?: Prisma.SortOrder
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
  dateSet?: Prisma.SortOrder
}

export type MechanicalIsolationSumOrderByAggregateInput = {
  topDepth?: Prisma.SortOrder
  bottomDepth?: Prisma.SortOrder
}

export type MechanicalIsolationListRelationFilter = {
  every?: Prisma.MechanicalIsolationWhereInput
  some?: Prisma.MechanicalIsolationWhereInput
  none?: Prisma.MechanicalIsolationWhereInput
}

export type MechanicalIsolationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type MechanicalIsolationCreateNestedManyWithoutMechanicalIsolationEnumInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput, Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput> | Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput[] | Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput[]
  connectOrCreate?: Prisma.MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput[]
  createMany?: Prisma.MechanicalIsolationCreateManyMechanicalIsolationEnumInputEnvelope
  connect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
}

export type MechanicalIsolationUncheckedCreateNestedManyWithoutMechanicalIsolationEnumInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput, Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput> | Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput[] | Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput[]
  connectOrCreate?: Prisma.MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput[]
  createMany?: Prisma.MechanicalIsolationCreateManyMechanicalIsolationEnumInputEnvelope
  connect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
}

export type MechanicalIsolationUpdateManyWithoutMechanicalIsolationEnumNestedInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput, Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput> | Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput[] | Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput[]
  connectOrCreate?: Prisma.MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput[]
  upsert?: Prisma.MechanicalIsolationUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput[]
  createMany?: Prisma.MechanicalIsolationCreateManyMechanicalIsolationEnumInputEnvelope
  set?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  disconnect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  delete?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  connect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  update?: Prisma.MechanicalIsolationUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput[]
  updateMany?: Prisma.MechanicalIsolationUpdateManyWithWhereWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationUpdateManyWithWhereWithoutMechanicalIsolationEnumInput[]
  deleteMany?: Prisma.MechanicalIsolationScalarWhereInput | Prisma.MechanicalIsolationScalarWhereInput[]
}

export type MechanicalIsolationUncheckedUpdateManyWithoutMechanicalIsolationEnumNestedInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput, Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput> | Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput[] | Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput[]
  connectOrCreate?: Prisma.MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput[]
  upsert?: Prisma.MechanicalIsolationUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput[]
  createMany?: Prisma.MechanicalIsolationCreateManyMechanicalIsolationEnumInputEnvelope
  set?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  disconnect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  delete?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  connect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  update?: Prisma.MechanicalIsolationUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput[]
  updateMany?: Prisma.MechanicalIsolationUpdateManyWithWhereWithoutMechanicalIsolationEnumInput | Prisma.MechanicalIsolationUpdateManyWithWhereWithoutMechanicalIsolationEnumInput[]
  deleteMany?: Prisma.MechanicalIsolationScalarWhereInput | Prisma.MechanicalIsolationScalarWhereInput[]
}

export type MechanicalIsolationCreateNestedManyWithoutWellInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutWellInput, Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput> | Prisma.MechanicalIsolationCreateWithoutWellInput[] | Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput[]
  connectOrCreate?: Prisma.MechanicalIsolationCreateOrConnectWithoutWellInput | Prisma.MechanicalIsolationCreateOrConnectWithoutWellInput[]
  createMany?: Prisma.MechanicalIsolationCreateManyWellInputEnvelope
  connect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
}

export type MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutWellInput, Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput> | Prisma.MechanicalIsolationCreateWithoutWellInput[] | Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput[]
  connectOrCreate?: Prisma.MechanicalIsolationCreateOrConnectWithoutWellInput | Prisma.MechanicalIsolationCreateOrConnectWithoutWellInput[]
  createMany?: Prisma.MechanicalIsolationCreateManyWellInputEnvelope
  connect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
}

export type MechanicalIsolationUpdateManyWithoutWellNestedInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutWellInput, Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput> | Prisma.MechanicalIsolationCreateWithoutWellInput[] | Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput[]
  connectOrCreate?: Prisma.MechanicalIsolationCreateOrConnectWithoutWellInput | Prisma.MechanicalIsolationCreateOrConnectWithoutWellInput[]
  upsert?: Prisma.MechanicalIsolationUpsertWithWhereUniqueWithoutWellInput | Prisma.MechanicalIsolationUpsertWithWhereUniqueWithoutWellInput[]
  createMany?: Prisma.MechanicalIsolationCreateManyWellInputEnvelope
  set?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  disconnect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  delete?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  connect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  update?: Prisma.MechanicalIsolationUpdateWithWhereUniqueWithoutWellInput | Prisma.MechanicalIsolationUpdateWithWhereUniqueWithoutWellInput[]
  updateMany?: Prisma.MechanicalIsolationUpdateManyWithWhereWithoutWellInput | Prisma.MechanicalIsolationUpdateManyWithWhereWithoutWellInput[]
  deleteMany?: Prisma.MechanicalIsolationScalarWhereInput | Prisma.MechanicalIsolationScalarWhereInput[]
}

export type MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput = {
  create?: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutWellInput, Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput> | Prisma.MechanicalIsolationCreateWithoutWellInput[] | Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput[]
  connectOrCreate?: Prisma.MechanicalIsolationCreateOrConnectWithoutWellInput | Prisma.MechanicalIsolationCreateOrConnectWithoutWellInput[]
  upsert?: Prisma.MechanicalIsolationUpsertWithWhereUniqueWithoutWellInput | Prisma.MechanicalIsolationUpsertWithWhereUniqueWithoutWellInput[]
  createMany?: Prisma.MechanicalIsolationCreateManyWellInputEnvelope
  set?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  disconnect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  delete?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  connect?: Prisma.MechanicalIsolationWhereUniqueInput | Prisma.MechanicalIsolationWhereUniqueInput[]
  update?: Prisma.MechanicalIsolationUpdateWithWhereUniqueWithoutWellInput | Prisma.MechanicalIsolationUpdateWithWhereUniqueWithoutWellInput[]
  updateMany?: Prisma.MechanicalIsolationUpdateManyWithWhereWithoutWellInput | Prisma.MechanicalIsolationUpdateManyWithWhereWithoutWellInput[]
  deleteMany?: Prisma.MechanicalIsolationScalarWhereInput | Prisma.MechanicalIsolationScalarWhereInput[]
}

export type MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput = {
  id?: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  well: Prisma.WellCreateNestedOneWithoutMechanicalIsolationInput
}

export type MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput = {
  id?: string
  api: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
}

export type MechanicalIsolationCreateOrConnectWithoutMechanicalIsolationEnumInput = {
  where: Prisma.MechanicalIsolationWhereUniqueInput
  create: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput, Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput>
}

export type MechanicalIsolationCreateManyMechanicalIsolationEnumInputEnvelope = {
  data: Prisma.MechanicalIsolationCreateManyMechanicalIsolationEnumInput | Prisma.MechanicalIsolationCreateManyMechanicalIsolationEnumInput[]
}

export type MechanicalIsolationUpsertWithWhereUniqueWithoutMechanicalIsolationEnumInput = {
  where: Prisma.MechanicalIsolationWhereUniqueInput
  update: Prisma.XOR<Prisma.MechanicalIsolationUpdateWithoutMechanicalIsolationEnumInput, Prisma.MechanicalIsolationUncheckedUpdateWithoutMechanicalIsolationEnumInput>
  create: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutMechanicalIsolationEnumInput, Prisma.MechanicalIsolationUncheckedCreateWithoutMechanicalIsolationEnumInput>
}

export type MechanicalIsolationUpdateWithWhereUniqueWithoutMechanicalIsolationEnumInput = {
  where: Prisma.MechanicalIsolationWhereUniqueInput
  data: Prisma.XOR<Prisma.MechanicalIsolationUpdateWithoutMechanicalIsolationEnumInput, Prisma.MechanicalIsolationUncheckedUpdateWithoutMechanicalIsolationEnumInput>
}

export type MechanicalIsolationUpdateManyWithWhereWithoutMechanicalIsolationEnumInput = {
  where: Prisma.MechanicalIsolationScalarWhereInput
  data: Prisma.XOR<Prisma.MechanicalIsolationUpdateManyMutationInput, Prisma.MechanicalIsolationUncheckedUpdateManyWithoutMechanicalIsolationEnumInput>
}

export type MechanicalIsolationScalarWhereInput = {
  AND?: Prisma.MechanicalIsolationScalarWhereInput | Prisma.MechanicalIsolationScalarWhereInput[]
  OR?: Prisma.MechanicalIsolationScalarWhereInput[]
  NOT?: Prisma.MechanicalIsolationScalarWhereInput | Prisma.MechanicalIsolationScalarWhereInput[]
  id?: Prisma.StringFilter<"MechanicalIsolation"> | string
  api?: Prisma.StringFilter<"MechanicalIsolation"> | string
  mechanicalIsolationEnumId?: Prisma.StringFilter<"MechanicalIsolation"> | string
  topDepth?: Prisma.IntFilter<"MechanicalIsolation"> | number
  bottomDepth?: Prisma.IntNullableFilter<"MechanicalIsolation"> | number | null
  dateSet?: Prisma.DateTimeNullableFilter<"MechanicalIsolation"> | Date | string | null
}

export type MechanicalIsolationCreateWithoutWellInput = {
  id?: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
  mechanicalIsolationEnum: Prisma.MechanicalIsolationEnumCreateNestedOneWithoutMechanicalIsolationInput
}

export type MechanicalIsolationUncheckedCreateWithoutWellInput = {
  id?: string
  mechanicalIsolationEnumId: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
}

export type MechanicalIsolationCreateOrConnectWithoutWellInput = {
  where: Prisma.MechanicalIsolationWhereUniqueInput
  create: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutWellInput, Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput>
}

export type MechanicalIsolationCreateManyWellInputEnvelope = {
  data: Prisma.MechanicalIsolationCreateManyWellInput | Prisma.MechanicalIsolationCreateManyWellInput[]
}

export type MechanicalIsolationUpsertWithWhereUniqueWithoutWellInput = {
  where: Prisma.MechanicalIsolationWhereUniqueInput
  update: Prisma.XOR<Prisma.MechanicalIsolationUpdateWithoutWellInput, Prisma.MechanicalIsolationUncheckedUpdateWithoutWellInput>
  create: Prisma.XOR<Prisma.MechanicalIsolationCreateWithoutWellInput, Prisma.MechanicalIsolationUncheckedCreateWithoutWellInput>
}

export type MechanicalIsolationUpdateWithWhereUniqueWithoutWellInput = {
  where: Prisma.MechanicalIsolationWhereUniqueInput
  data: Prisma.XOR<Prisma.MechanicalIsolationUpdateWithoutWellInput, Prisma.MechanicalIsolationUncheckedUpdateWithoutWellInput>
}

export type MechanicalIsolationUpdateManyWithWhereWithoutWellInput = {
  where: Prisma.MechanicalIsolationScalarWhereInput
  data: Prisma.XOR<Prisma.MechanicalIsolationUpdateManyMutationInput, Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellInput>
}

export type MechanicalIsolationCreateManyMechanicalIsolationEnumInput = {
  id?: string
  api: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
}

export type MechanicalIsolationUpdateWithoutMechanicalIsolationEnumInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  well?: Prisma.WellUpdateOneRequiredWithoutMechanicalIsolationNestedInput
}

export type MechanicalIsolationUncheckedUpdateWithoutMechanicalIsolationEnumInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type MechanicalIsolationUncheckedUpdateManyWithoutMechanicalIsolationEnumInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  api?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type MechanicalIsolationCreateManyWellInput = {
  id?: string
  mechanicalIsolationEnumId: string
  topDepth: number
  bottomDepth?: number | null
  dateSet?: Date | string | null
}

export type MechanicalIsolationUpdateWithoutWellInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  mechanicalIsolationEnum?: Prisma.MechanicalIsolationEnumUpdateOneRequiredWithoutMechanicalIsolationNestedInput
}

export type MechanicalIsolationUncheckedUpdateWithoutWellInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type MechanicalIsolationUncheckedUpdateManyWithoutWellInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mechanicalIsolationEnumId?: Prisma.StringFieldUpdateOperationsInput | string
  topDepth?: Prisma.IntFieldUpdateOperationsInput | number
  bottomDepth?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  dateSet?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type MechanicalIsolationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  api?: boolean
  mechanicalIsolationEnumId?: boolean
  topDepth?: boolean
  bottomDepth?: boolean
  dateSet?: boolean
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mechanicalIsolation"]>

export type MechanicalIsolationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  api?: boolean
  mechanicalIsolationEnumId?: boolean
  topDepth?: boolean
  bottomDepth?: boolean
  dateSet?: boolean
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mechanicalIsolation"]>

export type MechanicalIsolationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  api?: boolean
  mechanicalIsolationEnumId?: boolean
  topDepth?: boolean
  bottomDepth?: boolean
  dateSet?: boolean
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mechanicalIsolation"]>

export type MechanicalIsolationSelectScalar = {
  id?: boolean
  api?: boolean
  mechanicalIsolationEnumId?: boolean
  topDepth?: boolean
  bottomDepth?: boolean
  dateSet?: boolean
}

export type MechanicalIsolationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "api" | "mechanicalIsolationEnumId" | "topDepth" | "bottomDepth" | "dateSet", ExtArgs["result"]["mechanicalIsolation"]>
export type MechanicalIsolationInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}
export type MechanicalIsolationIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}
export type MechanicalIsolationIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mechanicalIsolationEnum?: boolean | Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>
  well?: boolean | Prisma.WellDefaultArgs<ExtArgs>
}

export type $MechanicalIsolationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "MechanicalIsolation"
  objects: {
    mechanicalIsolationEnum: Prisma.$MechanicalIsolationEnumPayload<ExtArgs>
    well: Prisma.$WellPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    api: string
    mechanicalIsolationEnumId: string
    topDepth: number
    bottomDepth: number | null
    dateSet: Date | null
  }, ExtArgs["result"]["mechanicalIsolation"]>
  composites: {}
}

export type MechanicalIsolationGetPayload<S extends boolean | null | undefined | MechanicalIsolationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload, S>

export type MechanicalIsolationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MechanicalIsolationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MechanicalIsolationCountAggregateInputType | true
  }

export interface MechanicalIsolationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MechanicalIsolation'], meta: { name: 'MechanicalIsolation' } }
  /**
   * Find zero or one MechanicalIsolation that matches the filter.
   * @param {MechanicalIsolationFindUniqueArgs} args - Arguments to find a MechanicalIsolation
   * @example
   * // Get one MechanicalIsolation
   * const mechanicalIsolation = await prisma.mechanicalIsolation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MechanicalIsolationFindUniqueArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one MechanicalIsolation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MechanicalIsolationFindUniqueOrThrowArgs} args - Arguments to find a MechanicalIsolation
   * @example
   * // Get one MechanicalIsolation
   * const mechanicalIsolation = await prisma.mechanicalIsolation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MechanicalIsolationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MechanicalIsolation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationFindFirstArgs} args - Arguments to find a MechanicalIsolation
   * @example
   * // Get one MechanicalIsolation
   * const mechanicalIsolation = await prisma.mechanicalIsolation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MechanicalIsolationFindFirstArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationFindFirstArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MechanicalIsolation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationFindFirstOrThrowArgs} args - Arguments to find a MechanicalIsolation
   * @example
   * // Get one MechanicalIsolation
   * const mechanicalIsolation = await prisma.mechanicalIsolation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MechanicalIsolationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more MechanicalIsolations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all MechanicalIsolations
   * const mechanicalIsolations = await prisma.mechanicalIsolation.findMany()
   * 
   * // Get first 10 MechanicalIsolations
   * const mechanicalIsolations = await prisma.mechanicalIsolation.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mechanicalIsolationWithIdOnly = await prisma.mechanicalIsolation.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MechanicalIsolationFindManyArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a MechanicalIsolation.
   * @param {MechanicalIsolationCreateArgs} args - Arguments to create a MechanicalIsolation.
   * @example
   * // Create one MechanicalIsolation
   * const MechanicalIsolation = await prisma.mechanicalIsolation.create({
   *   data: {
   *     // ... data to create a MechanicalIsolation
   *   }
   * })
   * 
   */
  create<T extends MechanicalIsolationCreateArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationCreateArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many MechanicalIsolations.
   * @param {MechanicalIsolationCreateManyArgs} args - Arguments to create many MechanicalIsolations.
   * @example
   * // Create many MechanicalIsolations
   * const mechanicalIsolation = await prisma.mechanicalIsolation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MechanicalIsolationCreateManyArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many MechanicalIsolations and returns the data saved in the database.
   * @param {MechanicalIsolationCreateManyAndReturnArgs} args - Arguments to create many MechanicalIsolations.
   * @example
   * // Create many MechanicalIsolations
   * const mechanicalIsolation = await prisma.mechanicalIsolation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many MechanicalIsolations and only return the `id`
   * const mechanicalIsolationWithIdOnly = await prisma.mechanicalIsolation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MechanicalIsolationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a MechanicalIsolation.
   * @param {MechanicalIsolationDeleteArgs} args - Arguments to delete one MechanicalIsolation.
   * @example
   * // Delete one MechanicalIsolation
   * const MechanicalIsolation = await prisma.mechanicalIsolation.delete({
   *   where: {
   *     // ... filter to delete one MechanicalIsolation
   *   }
   * })
   * 
   */
  delete<T extends MechanicalIsolationDeleteArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationDeleteArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one MechanicalIsolation.
   * @param {MechanicalIsolationUpdateArgs} args - Arguments to update one MechanicalIsolation.
   * @example
   * // Update one MechanicalIsolation
   * const mechanicalIsolation = await prisma.mechanicalIsolation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MechanicalIsolationUpdateArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationUpdateArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more MechanicalIsolations.
   * @param {MechanicalIsolationDeleteManyArgs} args - Arguments to filter MechanicalIsolations to delete.
   * @example
   * // Delete a few MechanicalIsolations
   * const { count } = await prisma.mechanicalIsolation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MechanicalIsolationDeleteManyArgs>(args?: Prisma.SelectSubset<T, MechanicalIsolationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MechanicalIsolations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many MechanicalIsolations
   * const mechanicalIsolation = await prisma.mechanicalIsolation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MechanicalIsolationUpdateManyArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MechanicalIsolations and returns the data updated in the database.
   * @param {MechanicalIsolationUpdateManyAndReturnArgs} args - Arguments to update many MechanicalIsolations.
   * @example
   * // Update many MechanicalIsolations
   * const mechanicalIsolation = await prisma.mechanicalIsolation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more MechanicalIsolations and only return the `id`
   * const mechanicalIsolationWithIdOnly = await prisma.mechanicalIsolation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MechanicalIsolationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one MechanicalIsolation.
   * @param {MechanicalIsolationUpsertArgs} args - Arguments to update or create a MechanicalIsolation.
   * @example
   * // Update or create a MechanicalIsolation
   * const mechanicalIsolation = await prisma.mechanicalIsolation.upsert({
   *   create: {
   *     // ... data to create a MechanicalIsolation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the MechanicalIsolation we want to update
   *   }
   * })
   */
  upsert<T extends MechanicalIsolationUpsertArgs>(args: Prisma.SelectSubset<T, MechanicalIsolationUpsertArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of MechanicalIsolations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationCountArgs} args - Arguments to filter MechanicalIsolations to count.
   * @example
   * // Count the number of MechanicalIsolations
   * const count = await prisma.mechanicalIsolation.count({
   *   where: {
   *     // ... the filter for the MechanicalIsolations we want to count
   *   }
   * })
  **/
  count<T extends MechanicalIsolationCountArgs>(
    args?: Prisma.Subset<T, MechanicalIsolationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MechanicalIsolationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a MechanicalIsolation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MechanicalIsolationAggregateArgs>(args: Prisma.Subset<T, MechanicalIsolationAggregateArgs>): Prisma.PrismaPromise<GetMechanicalIsolationAggregateType<T>>

  /**
   * Group by MechanicalIsolation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MechanicalIsolationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MechanicalIsolationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MechanicalIsolationGroupByArgs['orderBy'] }
      : { orderBy?: MechanicalIsolationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MechanicalIsolationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMechanicalIsolationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the MechanicalIsolation model
 */
readonly fields: MechanicalIsolationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for MechanicalIsolation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MechanicalIsolationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  mechanicalIsolationEnum<T extends Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MechanicalIsolationEnumDefaultArgs<ExtArgs>>): Prisma.Prisma__MechanicalIsolationEnumClient<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationEnumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  well<T extends Prisma.WellDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WellDefaultArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the MechanicalIsolation model
 */
export interface MechanicalIsolationFieldRefs {
  readonly id: Prisma.FieldRef<"MechanicalIsolation", 'String'>
  readonly api: Prisma.FieldRef<"MechanicalIsolation", 'String'>
  readonly mechanicalIsolationEnumId: Prisma.FieldRef<"MechanicalIsolation", 'String'>
  readonly topDepth: Prisma.FieldRef<"MechanicalIsolation", 'Int'>
  readonly bottomDepth: Prisma.FieldRef<"MechanicalIsolation", 'Int'>
  readonly dateSet: Prisma.FieldRef<"MechanicalIsolation", 'DateTime'>
}
    

// Custom InputTypes
/**
 * MechanicalIsolation findUnique
 */
export type MechanicalIsolationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolation to fetch.
   */
  where: Prisma.MechanicalIsolationWhereUniqueInput
}

/**
 * MechanicalIsolation findUniqueOrThrow
 */
export type MechanicalIsolationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolation to fetch.
   */
  where: Prisma.MechanicalIsolationWhereUniqueInput
}

/**
 * MechanicalIsolation findFirst
 */
export type MechanicalIsolationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolation to fetch.
   */
  where?: Prisma.MechanicalIsolationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MechanicalIsolations to fetch.
   */
  orderBy?: Prisma.MechanicalIsolationOrderByWithRelationInput | Prisma.MechanicalIsolationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MechanicalIsolations.
   */
  cursor?: Prisma.MechanicalIsolationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MechanicalIsolations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MechanicalIsolations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MechanicalIsolations.
   */
  distinct?: Prisma.MechanicalIsolationScalarFieldEnum | Prisma.MechanicalIsolationScalarFieldEnum[]
}

/**
 * MechanicalIsolation findFirstOrThrow
 */
export type MechanicalIsolationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolation to fetch.
   */
  where?: Prisma.MechanicalIsolationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MechanicalIsolations to fetch.
   */
  orderBy?: Prisma.MechanicalIsolationOrderByWithRelationInput | Prisma.MechanicalIsolationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MechanicalIsolations.
   */
  cursor?: Prisma.MechanicalIsolationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MechanicalIsolations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MechanicalIsolations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MechanicalIsolations.
   */
  distinct?: Prisma.MechanicalIsolationScalarFieldEnum | Prisma.MechanicalIsolationScalarFieldEnum[]
}

/**
 * MechanicalIsolation findMany
 */
export type MechanicalIsolationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * Filter, which MechanicalIsolations to fetch.
   */
  where?: Prisma.MechanicalIsolationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MechanicalIsolations to fetch.
   */
  orderBy?: Prisma.MechanicalIsolationOrderByWithRelationInput | Prisma.MechanicalIsolationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing MechanicalIsolations.
   */
  cursor?: Prisma.MechanicalIsolationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MechanicalIsolations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MechanicalIsolations.
   */
  skip?: number
  distinct?: Prisma.MechanicalIsolationScalarFieldEnum | Prisma.MechanicalIsolationScalarFieldEnum[]
}

/**
 * MechanicalIsolation create
 */
export type MechanicalIsolationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * The data needed to create a MechanicalIsolation.
   */
  data: Prisma.XOR<Prisma.MechanicalIsolationCreateInput, Prisma.MechanicalIsolationUncheckedCreateInput>
}

/**
 * MechanicalIsolation createMany
 */
export type MechanicalIsolationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many MechanicalIsolations.
   */
  data: Prisma.MechanicalIsolationCreateManyInput | Prisma.MechanicalIsolationCreateManyInput[]
}

/**
 * MechanicalIsolation createManyAndReturn
 */
export type MechanicalIsolationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * The data used to create many MechanicalIsolations.
   */
  data: Prisma.MechanicalIsolationCreateManyInput | Prisma.MechanicalIsolationCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * MechanicalIsolation update
 */
export type MechanicalIsolationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * The data needed to update a MechanicalIsolation.
   */
  data: Prisma.XOR<Prisma.MechanicalIsolationUpdateInput, Prisma.MechanicalIsolationUncheckedUpdateInput>
  /**
   * Choose, which MechanicalIsolation to update.
   */
  where: Prisma.MechanicalIsolationWhereUniqueInput
}

/**
 * MechanicalIsolation updateMany
 */
export type MechanicalIsolationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update MechanicalIsolations.
   */
  data: Prisma.XOR<Prisma.MechanicalIsolationUpdateManyMutationInput, Prisma.MechanicalIsolationUncheckedUpdateManyInput>
  /**
   * Filter which MechanicalIsolations to update
   */
  where?: Prisma.MechanicalIsolationWhereInput
  /**
   * Limit how many MechanicalIsolations to update.
   */
  limit?: number
}

/**
 * MechanicalIsolation updateManyAndReturn
 */
export type MechanicalIsolationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * The data used to update MechanicalIsolations.
   */
  data: Prisma.XOR<Prisma.MechanicalIsolationUpdateManyMutationInput, Prisma.MechanicalIsolationUncheckedUpdateManyInput>
  /**
   * Filter which MechanicalIsolations to update
   */
  where?: Prisma.MechanicalIsolationWhereInput
  /**
   * Limit how many MechanicalIsolations to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * MechanicalIsolation upsert
 */
export type MechanicalIsolationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * The filter to search for the MechanicalIsolation to update in case it exists.
   */
  where: Prisma.MechanicalIsolationWhereUniqueInput
  /**
   * In case the MechanicalIsolation found by the `where` argument doesn't exist, create a new MechanicalIsolation with this data.
   */
  create: Prisma.XOR<Prisma.MechanicalIsolationCreateInput, Prisma.MechanicalIsolationUncheckedCreateInput>
  /**
   * In case the MechanicalIsolation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MechanicalIsolationUpdateInput, Prisma.MechanicalIsolationUncheckedUpdateInput>
}

/**
 * MechanicalIsolation delete
 */
export type MechanicalIsolationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  /**
   * Filter which MechanicalIsolation to delete.
   */
  where: Prisma.MechanicalIsolationWhereUniqueInput
}

/**
 * MechanicalIsolation deleteMany
 */
export type MechanicalIsolationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MechanicalIsolations to delete
   */
  where?: Prisma.MechanicalIsolationWhereInput
  /**
   * Limit how many MechanicalIsolations to delete.
   */
  limit?: number
}

/**
 * MechanicalIsolation without action
 */
export type MechanicalIsolationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
}

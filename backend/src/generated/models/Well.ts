
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Well` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Well
 * 
 */
export type WellModel = runtime.Types.Result.DefaultSelection<Prisma.$WellPayload>

export type AggregateWell = {
  _count: WellCountAggregateOutputType | null
  _min: WellMinAggregateOutputType | null
  _max: WellMaxAggregateOutputType | null
}

export type WellMinAggregateOutputType = {
  api: string | null
  operatorId: string | null
  wellInfoId: string | null
  locationId: string | null
  geologyId: string | null
}

export type WellMaxAggregateOutputType = {
  api: string | null
  operatorId: string | null
  wellInfoId: string | null
  locationId: string | null
  geologyId: string | null
}

export type WellCountAggregateOutputType = {
  api: number
  operatorId: number
  wellInfoId: number
  locationId: number
  geologyId: number
  _all: number
}


export type WellMinAggregateInputType = {
  api?: true
  operatorId?: true
  wellInfoId?: true
  locationId?: true
  geologyId?: true
}

export type WellMaxAggregateInputType = {
  api?: true
  operatorId?: true
  wellInfoId?: true
  locationId?: true
  geologyId?: true
}

export type WellCountAggregateInputType = {
  api?: true
  operatorId?: true
  wellInfoId?: true
  locationId?: true
  geologyId?: true
  _all?: true
}

export type WellAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Well to aggregate.
   */
  where?: Prisma.WellWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Wells to fetch.
   */
  orderBy?: Prisma.WellOrderByWithRelationInput | Prisma.WellOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.WellWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Wells from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Wells.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Wells
  **/
  _count?: true | WellCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: WellMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: WellMaxAggregateInputType
}

export type GetWellAggregateType<T extends WellAggregateArgs> = {
      [P in keyof T & keyof AggregateWell]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWell[P]>
    : Prisma.GetScalarType<T[P], AggregateWell[P]>
}




export type WellGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WellWhereInput
  orderBy?: Prisma.WellOrderByWithAggregationInput | Prisma.WellOrderByWithAggregationInput[]
  by: Prisma.WellScalarFieldEnum[] | Prisma.WellScalarFieldEnum
  having?: Prisma.WellScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: WellCountAggregateInputType | true
  _min?: WellMinAggregateInputType
  _max?: WellMaxAggregateInputType
}

export type WellGroupByOutputType = {
  api: string
  operatorId: string | null
  wellInfoId: string | null
  locationId: string | null
  geologyId: string | null
  _count: WellCountAggregateOutputType | null
  _min: WellMinAggregateOutputType | null
  _max: WellMaxAggregateOutputType | null
}

type GetWellGroupByPayload<T extends WellGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WellGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof WellGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WellGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WellGroupByOutputType[P]>
      }
    >
  >



export type WellWhereInput = {
  AND?: Prisma.WellWhereInput | Prisma.WellWhereInput[]
  OR?: Prisma.WellWhereInput[]
  NOT?: Prisma.WellWhereInput | Prisma.WellWhereInput[]
  api?: Prisma.StringFilter<"Well"> | string
  operatorId?: Prisma.StringNullableFilter<"Well"> | string | null
  wellInfoId?: Prisma.StringNullableFilter<"Well"> | string | null
  locationId?: Prisma.StringNullableFilter<"Well"> | string | null
  geologyId?: Prisma.StringNullableFilter<"Well"> | string | null
  casings?: Prisma.CasingListRelationFilter
  geology?: Prisma.XOR<Prisma.GeologyNullableScalarRelationFilter, Prisma.GeologyWhereInput> | null
  location?: Prisma.XOR<Prisma.LocationNullableScalarRelationFilter, Prisma.LocationWhereInput> | null
  mechanicalIsolation?: Prisma.MechanicalIsolationListRelationFilter
  operator?: Prisma.XOR<Prisma.OperatorNullableScalarRelationFilter, Prisma.OperatorWhereInput> | null
  perforations?: Prisma.PerforationListRelationFilter
  plugSchedules?: Prisma.PlugScheduleListRelationFilter
  rods?: Prisma.RodsListRelationFilter
  tubings?: Prisma.TubingListRelationFilter
  wellInfo?: Prisma.XOR<Prisma.WellInfoNullableScalarRelationFilter, Prisma.WellInfoWhereInput> | null
}

export type WellOrderByWithRelationInput = {
  api?: Prisma.SortOrder
  operatorId?: Prisma.SortOrderInput | Prisma.SortOrder
  wellInfoId?: Prisma.SortOrderInput | Prisma.SortOrder
  locationId?: Prisma.SortOrderInput | Prisma.SortOrder
  geologyId?: Prisma.SortOrderInput | Prisma.SortOrder
  casings?: Prisma.CasingOrderByRelationAggregateInput
  geology?: Prisma.GeologyOrderByWithRelationInput
  location?: Prisma.LocationOrderByWithRelationInput
  mechanicalIsolation?: Prisma.MechanicalIsolationOrderByRelationAggregateInput
  operator?: Prisma.OperatorOrderByWithRelationInput
  perforations?: Prisma.PerforationOrderByRelationAggregateInput
  plugSchedules?: Prisma.PlugScheduleOrderByRelationAggregateInput
  rods?: Prisma.RodsOrderByRelationAggregateInput
  tubings?: Prisma.TubingOrderByRelationAggregateInput
  wellInfo?: Prisma.WellInfoOrderByWithRelationInput
}

export type WellWhereUniqueInput = Prisma.AtLeast<{
  api?: string
  wellInfoId?: string
  locationId?: string
  AND?: Prisma.WellWhereInput | Prisma.WellWhereInput[]
  OR?: Prisma.WellWhereInput[]
  NOT?: Prisma.WellWhereInput | Prisma.WellWhereInput[]
  operatorId?: Prisma.StringNullableFilter<"Well"> | string | null
  geologyId?: Prisma.StringNullableFilter<"Well"> | string | null
  casings?: Prisma.CasingListRelationFilter
  geology?: Prisma.XOR<Prisma.GeologyNullableScalarRelationFilter, Prisma.GeologyWhereInput> | null
  location?: Prisma.XOR<Prisma.LocationNullableScalarRelationFilter, Prisma.LocationWhereInput> | null
  mechanicalIsolation?: Prisma.MechanicalIsolationListRelationFilter
  operator?: Prisma.XOR<Prisma.OperatorNullableScalarRelationFilter, Prisma.OperatorWhereInput> | null
  perforations?: Prisma.PerforationListRelationFilter
  plugSchedules?: Prisma.PlugScheduleListRelationFilter
  rods?: Prisma.RodsListRelationFilter
  tubings?: Prisma.TubingListRelationFilter
  wellInfo?: Prisma.XOR<Prisma.WellInfoNullableScalarRelationFilter, Prisma.WellInfoWhereInput> | null
}, "api" | "api" | "wellInfoId" | "locationId">

export type WellOrderByWithAggregationInput = {
  api?: Prisma.SortOrder
  operatorId?: Prisma.SortOrderInput | Prisma.SortOrder
  wellInfoId?: Prisma.SortOrderInput | Prisma.SortOrder
  locationId?: Prisma.SortOrderInput | Prisma.SortOrder
  geologyId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.WellCountOrderByAggregateInput
  _max?: Prisma.WellMaxOrderByAggregateInput
  _min?: Prisma.WellMinOrderByAggregateInput
}

export type WellScalarWhereWithAggregatesInput = {
  AND?: Prisma.WellScalarWhereWithAggregatesInput | Prisma.WellScalarWhereWithAggregatesInput[]
  OR?: Prisma.WellScalarWhereWithAggregatesInput[]
  NOT?: Prisma.WellScalarWhereWithAggregatesInput | Prisma.WellScalarWhereWithAggregatesInput[]
  api?: Prisma.StringWithAggregatesFilter<"Well"> | string
  operatorId?: Prisma.StringNullableWithAggregatesFilter<"Well"> | string | null
  wellInfoId?: Prisma.StringNullableWithAggregatesFilter<"Well"> | string | null
  locationId?: Prisma.StringNullableWithAggregatesFilter<"Well"> | string | null
  geologyId?: Prisma.StringNullableWithAggregatesFilter<"Well"> | string | null
}

export type WellCreateInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellUpdateInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellCreateManyInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
}

export type WellUpdateManyMutationInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type WellUncheckedUpdateManyInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type WellScalarRelationFilter = {
  is?: Prisma.WellWhereInput
  isNot?: Prisma.WellWhereInput
}

export type WellListRelationFilter = {
  every?: Prisma.WellWhereInput
  some?: Prisma.WellWhereInput
  none?: Prisma.WellWhereInput
}

export type WellOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type WellCountOrderByAggregateInput = {
  api?: Prisma.SortOrder
  operatorId?: Prisma.SortOrder
  wellInfoId?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
  geologyId?: Prisma.SortOrder
}

export type WellMaxOrderByAggregateInput = {
  api?: Prisma.SortOrder
  operatorId?: Prisma.SortOrder
  wellInfoId?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
  geologyId?: Prisma.SortOrder
}

export type WellMinOrderByAggregateInput = {
  api?: Prisma.SortOrder
  operatorId?: Prisma.SortOrder
  wellInfoId?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
  geologyId?: Prisma.SortOrder
}

export type WellCreateNestedOneWithoutCasingsInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutCasingsInput, Prisma.WellUncheckedCreateWithoutCasingsInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutCasingsInput
  connect?: Prisma.WellWhereUniqueInput
}

export type WellUpdateOneRequiredWithoutCasingsNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutCasingsInput, Prisma.WellUncheckedCreateWithoutCasingsInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutCasingsInput
  upsert?: Prisma.WellUpsertWithoutCasingsInput
  connect?: Prisma.WellWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WellUpdateToOneWithWhereWithoutCasingsInput, Prisma.WellUpdateWithoutCasingsInput>, Prisma.WellUncheckedUpdateWithoutCasingsInput>
}

export type WellCreateNestedManyWithoutGeologyInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutGeologyInput, Prisma.WellUncheckedCreateWithoutGeologyInput> | Prisma.WellCreateWithoutGeologyInput[] | Prisma.WellUncheckedCreateWithoutGeologyInput[]
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutGeologyInput | Prisma.WellCreateOrConnectWithoutGeologyInput[]
  createMany?: Prisma.WellCreateManyGeologyInputEnvelope
  connect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
}

export type WellUncheckedCreateNestedManyWithoutGeologyInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutGeologyInput, Prisma.WellUncheckedCreateWithoutGeologyInput> | Prisma.WellCreateWithoutGeologyInput[] | Prisma.WellUncheckedCreateWithoutGeologyInput[]
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutGeologyInput | Prisma.WellCreateOrConnectWithoutGeologyInput[]
  createMany?: Prisma.WellCreateManyGeologyInputEnvelope
  connect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
}

export type WellUpdateManyWithoutGeologyNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutGeologyInput, Prisma.WellUncheckedCreateWithoutGeologyInput> | Prisma.WellCreateWithoutGeologyInput[] | Prisma.WellUncheckedCreateWithoutGeologyInput[]
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutGeologyInput | Prisma.WellCreateOrConnectWithoutGeologyInput[]
  upsert?: Prisma.WellUpsertWithWhereUniqueWithoutGeologyInput | Prisma.WellUpsertWithWhereUniqueWithoutGeologyInput[]
  createMany?: Prisma.WellCreateManyGeologyInputEnvelope
  set?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  disconnect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  delete?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  connect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  update?: Prisma.WellUpdateWithWhereUniqueWithoutGeologyInput | Prisma.WellUpdateWithWhereUniqueWithoutGeologyInput[]
  updateMany?: Prisma.WellUpdateManyWithWhereWithoutGeologyInput | Prisma.WellUpdateManyWithWhereWithoutGeologyInput[]
  deleteMany?: Prisma.WellScalarWhereInput | Prisma.WellScalarWhereInput[]
}

export type WellUncheckedUpdateManyWithoutGeologyNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutGeologyInput, Prisma.WellUncheckedCreateWithoutGeologyInput> | Prisma.WellCreateWithoutGeologyInput[] | Prisma.WellUncheckedCreateWithoutGeologyInput[]
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutGeologyInput | Prisma.WellCreateOrConnectWithoutGeologyInput[]
  upsert?: Prisma.WellUpsertWithWhereUniqueWithoutGeologyInput | Prisma.WellUpsertWithWhereUniqueWithoutGeologyInput[]
  createMany?: Prisma.WellCreateManyGeologyInputEnvelope
  set?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  disconnect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  delete?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  connect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  update?: Prisma.WellUpdateWithWhereUniqueWithoutGeologyInput | Prisma.WellUpdateWithWhereUniqueWithoutGeologyInput[]
  updateMany?: Prisma.WellUpdateManyWithWhereWithoutGeologyInput | Prisma.WellUpdateManyWithWhereWithoutGeologyInput[]
  deleteMany?: Prisma.WellScalarWhereInput | Prisma.WellScalarWhereInput[]
}

export type WellCreateNestedOneWithoutLocationInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutLocationInput, Prisma.WellUncheckedCreateWithoutLocationInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutLocationInput
  connect?: Prisma.WellWhereUniqueInput
}

export type WellUpdateOneRequiredWithoutLocationNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutLocationInput, Prisma.WellUncheckedCreateWithoutLocationInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutLocationInput
  upsert?: Prisma.WellUpsertWithoutLocationInput
  connect?: Prisma.WellWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WellUpdateToOneWithWhereWithoutLocationInput, Prisma.WellUpdateWithoutLocationInput>, Prisma.WellUncheckedUpdateWithoutLocationInput>
}

export type WellCreateNestedOneWithoutMechanicalIsolationInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutMechanicalIsolationInput, Prisma.WellUncheckedCreateWithoutMechanicalIsolationInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutMechanicalIsolationInput
  connect?: Prisma.WellWhereUniqueInput
}

export type WellUpdateOneRequiredWithoutMechanicalIsolationNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutMechanicalIsolationInput, Prisma.WellUncheckedCreateWithoutMechanicalIsolationInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutMechanicalIsolationInput
  upsert?: Prisma.WellUpsertWithoutMechanicalIsolationInput
  connect?: Prisma.WellWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WellUpdateToOneWithWhereWithoutMechanicalIsolationInput, Prisma.WellUpdateWithoutMechanicalIsolationInput>, Prisma.WellUncheckedUpdateWithoutMechanicalIsolationInput>
}

export type WellCreateNestedManyWithoutOperatorInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutOperatorInput, Prisma.WellUncheckedCreateWithoutOperatorInput> | Prisma.WellCreateWithoutOperatorInput[] | Prisma.WellUncheckedCreateWithoutOperatorInput[]
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutOperatorInput | Prisma.WellCreateOrConnectWithoutOperatorInput[]
  createMany?: Prisma.WellCreateManyOperatorInputEnvelope
  connect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
}

export type WellUncheckedCreateNestedManyWithoutOperatorInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutOperatorInput, Prisma.WellUncheckedCreateWithoutOperatorInput> | Prisma.WellCreateWithoutOperatorInput[] | Prisma.WellUncheckedCreateWithoutOperatorInput[]
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutOperatorInput | Prisma.WellCreateOrConnectWithoutOperatorInput[]
  createMany?: Prisma.WellCreateManyOperatorInputEnvelope
  connect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
}

export type WellUpdateManyWithoutOperatorNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutOperatorInput, Prisma.WellUncheckedCreateWithoutOperatorInput> | Prisma.WellCreateWithoutOperatorInput[] | Prisma.WellUncheckedCreateWithoutOperatorInput[]
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutOperatorInput | Prisma.WellCreateOrConnectWithoutOperatorInput[]
  upsert?: Prisma.WellUpsertWithWhereUniqueWithoutOperatorInput | Prisma.WellUpsertWithWhereUniqueWithoutOperatorInput[]
  createMany?: Prisma.WellCreateManyOperatorInputEnvelope
  set?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  disconnect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  delete?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  connect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  update?: Prisma.WellUpdateWithWhereUniqueWithoutOperatorInput | Prisma.WellUpdateWithWhereUniqueWithoutOperatorInput[]
  updateMany?: Prisma.WellUpdateManyWithWhereWithoutOperatorInput | Prisma.WellUpdateManyWithWhereWithoutOperatorInput[]
  deleteMany?: Prisma.WellScalarWhereInput | Prisma.WellScalarWhereInput[]
}

export type WellUncheckedUpdateManyWithoutOperatorNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutOperatorInput, Prisma.WellUncheckedCreateWithoutOperatorInput> | Prisma.WellCreateWithoutOperatorInput[] | Prisma.WellUncheckedCreateWithoutOperatorInput[]
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutOperatorInput | Prisma.WellCreateOrConnectWithoutOperatorInput[]
  upsert?: Prisma.WellUpsertWithWhereUniqueWithoutOperatorInput | Prisma.WellUpsertWithWhereUniqueWithoutOperatorInput[]
  createMany?: Prisma.WellCreateManyOperatorInputEnvelope
  set?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  disconnect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  delete?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  connect?: Prisma.WellWhereUniqueInput | Prisma.WellWhereUniqueInput[]
  update?: Prisma.WellUpdateWithWhereUniqueWithoutOperatorInput | Prisma.WellUpdateWithWhereUniqueWithoutOperatorInput[]
  updateMany?: Prisma.WellUpdateManyWithWhereWithoutOperatorInput | Prisma.WellUpdateManyWithWhereWithoutOperatorInput[]
  deleteMany?: Prisma.WellScalarWhereInput | Prisma.WellScalarWhereInput[]
}

export type WellCreateNestedOneWithoutPerforationsInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutPerforationsInput, Prisma.WellUncheckedCreateWithoutPerforationsInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutPerforationsInput
  connect?: Prisma.WellWhereUniqueInput
}

export type WellUpdateOneRequiredWithoutPerforationsNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutPerforationsInput, Prisma.WellUncheckedCreateWithoutPerforationsInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutPerforationsInput
  upsert?: Prisma.WellUpsertWithoutPerforationsInput
  connect?: Prisma.WellWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WellUpdateToOneWithWhereWithoutPerforationsInput, Prisma.WellUpdateWithoutPerforationsInput>, Prisma.WellUncheckedUpdateWithoutPerforationsInput>
}

export type WellCreateNestedOneWithoutPlugSchedulesInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutPlugSchedulesInput, Prisma.WellUncheckedCreateWithoutPlugSchedulesInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutPlugSchedulesInput
  connect?: Prisma.WellWhereUniqueInput
}

export type WellUpdateOneRequiredWithoutPlugSchedulesNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutPlugSchedulesInput, Prisma.WellUncheckedCreateWithoutPlugSchedulesInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutPlugSchedulesInput
  upsert?: Prisma.WellUpsertWithoutPlugSchedulesInput
  connect?: Prisma.WellWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WellUpdateToOneWithWhereWithoutPlugSchedulesInput, Prisma.WellUpdateWithoutPlugSchedulesInput>, Prisma.WellUncheckedUpdateWithoutPlugSchedulesInput>
}

export type WellCreateNestedOneWithoutRodsInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutRodsInput, Prisma.WellUncheckedCreateWithoutRodsInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutRodsInput
  connect?: Prisma.WellWhereUniqueInput
}

export type WellUpdateOneRequiredWithoutRodsNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutRodsInput, Prisma.WellUncheckedCreateWithoutRodsInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutRodsInput
  upsert?: Prisma.WellUpsertWithoutRodsInput
  connect?: Prisma.WellWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WellUpdateToOneWithWhereWithoutRodsInput, Prisma.WellUpdateWithoutRodsInput>, Prisma.WellUncheckedUpdateWithoutRodsInput>
}

export type WellCreateNestedOneWithoutTubingsInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutTubingsInput, Prisma.WellUncheckedCreateWithoutTubingsInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutTubingsInput
  connect?: Prisma.WellWhereUniqueInput
}

export type WellUpdateOneRequiredWithoutTubingsNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutTubingsInput, Prisma.WellUncheckedCreateWithoutTubingsInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutTubingsInput
  upsert?: Prisma.WellUpsertWithoutTubingsInput
  connect?: Prisma.WellWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WellUpdateToOneWithWhereWithoutTubingsInput, Prisma.WellUpdateWithoutTubingsInput>, Prisma.WellUncheckedUpdateWithoutTubingsInput>
}

export type WellCreateNestedOneWithoutWellInfoInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutWellInfoInput, Prisma.WellUncheckedCreateWithoutWellInfoInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutWellInfoInput
  connect?: Prisma.WellWhereUniqueInput
}

export type WellUpdateOneRequiredWithoutWellInfoNestedInput = {
  create?: Prisma.XOR<Prisma.WellCreateWithoutWellInfoInput, Prisma.WellUncheckedCreateWithoutWellInfoInput>
  connectOrCreate?: Prisma.WellCreateOrConnectWithoutWellInfoInput
  upsert?: Prisma.WellUpsertWithoutWellInfoInput
  connect?: Prisma.WellWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WellUpdateToOneWithWhereWithoutWellInfoInput, Prisma.WellUpdateWithoutWellInfoInput>, Prisma.WellUncheckedUpdateWithoutWellInfoInput>
}

export type WellCreateWithoutCasingsInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutCasingsInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutCasingsInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutCasingsInput, Prisma.WellUncheckedCreateWithoutCasingsInput>
}

export type WellUpsertWithoutCasingsInput = {
  update: Prisma.XOR<Prisma.WellUpdateWithoutCasingsInput, Prisma.WellUncheckedUpdateWithoutCasingsInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutCasingsInput, Prisma.WellUncheckedCreateWithoutCasingsInput>
  where?: Prisma.WellWhereInput
}

export type WellUpdateToOneWithWhereWithoutCasingsInput = {
  where?: Prisma.WellWhereInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutCasingsInput, Prisma.WellUncheckedUpdateWithoutCasingsInput>
}

export type WellUpdateWithoutCasingsInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutCasingsInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellCreateWithoutGeologyInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutGeologyInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutGeologyInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutGeologyInput, Prisma.WellUncheckedCreateWithoutGeologyInput>
}

export type WellCreateManyGeologyInputEnvelope = {
  data: Prisma.WellCreateManyGeologyInput | Prisma.WellCreateManyGeologyInput[]
}

export type WellUpsertWithWhereUniqueWithoutGeologyInput = {
  where: Prisma.WellWhereUniqueInput
  update: Prisma.XOR<Prisma.WellUpdateWithoutGeologyInput, Prisma.WellUncheckedUpdateWithoutGeologyInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutGeologyInput, Prisma.WellUncheckedCreateWithoutGeologyInput>
}

export type WellUpdateWithWhereUniqueWithoutGeologyInput = {
  where: Prisma.WellWhereUniqueInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutGeologyInput, Prisma.WellUncheckedUpdateWithoutGeologyInput>
}

export type WellUpdateManyWithWhereWithoutGeologyInput = {
  where: Prisma.WellScalarWhereInput
  data: Prisma.XOR<Prisma.WellUpdateManyMutationInput, Prisma.WellUncheckedUpdateManyWithoutGeologyInput>
}

export type WellScalarWhereInput = {
  AND?: Prisma.WellScalarWhereInput | Prisma.WellScalarWhereInput[]
  OR?: Prisma.WellScalarWhereInput[]
  NOT?: Prisma.WellScalarWhereInput | Prisma.WellScalarWhereInput[]
  api?: Prisma.StringFilter<"Well"> | string
  operatorId?: Prisma.StringNullableFilter<"Well"> | string | null
  wellInfoId?: Prisma.StringNullableFilter<"Well"> | string | null
  locationId?: Prisma.StringNullableFilter<"Well"> | string | null
  geologyId?: Prisma.StringNullableFilter<"Well"> | string | null
}

export type WellCreateWithoutLocationInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutLocationInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutLocationInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutLocationInput, Prisma.WellUncheckedCreateWithoutLocationInput>
}

export type WellUpsertWithoutLocationInput = {
  update: Prisma.XOR<Prisma.WellUpdateWithoutLocationInput, Prisma.WellUncheckedUpdateWithoutLocationInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutLocationInput, Prisma.WellUncheckedCreateWithoutLocationInput>
  where?: Prisma.WellWhereInput
}

export type WellUpdateToOneWithWhereWithoutLocationInput = {
  where?: Prisma.WellWhereInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutLocationInput, Prisma.WellUncheckedUpdateWithoutLocationInput>
}

export type WellUpdateWithoutLocationInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutLocationInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellCreateWithoutMechanicalIsolationInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutMechanicalIsolationInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutMechanicalIsolationInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutMechanicalIsolationInput, Prisma.WellUncheckedCreateWithoutMechanicalIsolationInput>
}

export type WellUpsertWithoutMechanicalIsolationInput = {
  update: Prisma.XOR<Prisma.WellUpdateWithoutMechanicalIsolationInput, Prisma.WellUncheckedUpdateWithoutMechanicalIsolationInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutMechanicalIsolationInput, Prisma.WellUncheckedCreateWithoutMechanicalIsolationInput>
  where?: Prisma.WellWhereInput
}

export type WellUpdateToOneWithWhereWithoutMechanicalIsolationInput = {
  where?: Prisma.WellWhereInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutMechanicalIsolationInput, Prisma.WellUncheckedUpdateWithoutMechanicalIsolationInput>
}

export type WellUpdateWithoutMechanicalIsolationInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutMechanicalIsolationInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellCreateWithoutOperatorInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutOperatorInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutOperatorInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutOperatorInput, Prisma.WellUncheckedCreateWithoutOperatorInput>
}

export type WellCreateManyOperatorInputEnvelope = {
  data: Prisma.WellCreateManyOperatorInput | Prisma.WellCreateManyOperatorInput[]
}

export type WellUpsertWithWhereUniqueWithoutOperatorInput = {
  where: Prisma.WellWhereUniqueInput
  update: Prisma.XOR<Prisma.WellUpdateWithoutOperatorInput, Prisma.WellUncheckedUpdateWithoutOperatorInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutOperatorInput, Prisma.WellUncheckedCreateWithoutOperatorInput>
}

export type WellUpdateWithWhereUniqueWithoutOperatorInput = {
  where: Prisma.WellWhereUniqueInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutOperatorInput, Prisma.WellUncheckedUpdateWithoutOperatorInput>
}

export type WellUpdateManyWithWhereWithoutOperatorInput = {
  where: Prisma.WellScalarWhereInput
  data: Prisma.XOR<Prisma.WellUpdateManyMutationInput, Prisma.WellUncheckedUpdateManyWithoutOperatorInput>
}

export type WellCreateWithoutPerforationsInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutPerforationsInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutPerforationsInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutPerforationsInput, Prisma.WellUncheckedCreateWithoutPerforationsInput>
}

export type WellUpsertWithoutPerforationsInput = {
  update: Prisma.XOR<Prisma.WellUpdateWithoutPerforationsInput, Prisma.WellUncheckedUpdateWithoutPerforationsInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutPerforationsInput, Prisma.WellUncheckedCreateWithoutPerforationsInput>
  where?: Prisma.WellWhereInput
}

export type WellUpdateToOneWithWhereWithoutPerforationsInput = {
  where?: Prisma.WellWhereInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutPerforationsInput, Prisma.WellUncheckedUpdateWithoutPerforationsInput>
}

export type WellUpdateWithoutPerforationsInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutPerforationsInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellCreateWithoutPlugSchedulesInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutPlugSchedulesInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutPlugSchedulesInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutPlugSchedulesInput, Prisma.WellUncheckedCreateWithoutPlugSchedulesInput>
}

export type WellUpsertWithoutPlugSchedulesInput = {
  update: Prisma.XOR<Prisma.WellUpdateWithoutPlugSchedulesInput, Prisma.WellUncheckedUpdateWithoutPlugSchedulesInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutPlugSchedulesInput, Prisma.WellUncheckedCreateWithoutPlugSchedulesInput>
  where?: Prisma.WellWhereInput
}

export type WellUpdateToOneWithWhereWithoutPlugSchedulesInput = {
  where?: Prisma.WellWhereInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutPlugSchedulesInput, Prisma.WellUncheckedUpdateWithoutPlugSchedulesInput>
}

export type WellUpdateWithoutPlugSchedulesInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutPlugSchedulesInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellCreateWithoutRodsInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutRodsInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutRodsInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutRodsInput, Prisma.WellUncheckedCreateWithoutRodsInput>
}

export type WellUpsertWithoutRodsInput = {
  update: Prisma.XOR<Prisma.WellUpdateWithoutRodsInput, Prisma.WellUncheckedUpdateWithoutRodsInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutRodsInput, Prisma.WellUncheckedCreateWithoutRodsInput>
  where?: Prisma.WellWhereInput
}

export type WellUpdateToOneWithWhereWithoutRodsInput = {
  where?: Prisma.WellWhereInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutRodsInput, Prisma.WellUncheckedUpdateWithoutRodsInput>
}

export type WellUpdateWithoutRodsInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutRodsInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellCreateWithoutTubingsInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoCreateNestedOneWithoutWellInput
}

export type WellUncheckedCreateWithoutTubingsInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  wellInfo?: Prisma.WellInfoUncheckedCreateNestedOneWithoutWellInput
}

export type WellCreateOrConnectWithoutTubingsInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutTubingsInput, Prisma.WellUncheckedCreateWithoutTubingsInput>
}

export type WellUpsertWithoutTubingsInput = {
  update: Prisma.XOR<Prisma.WellUpdateWithoutTubingsInput, Prisma.WellUncheckedUpdateWithoutTubingsInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutTubingsInput, Prisma.WellUncheckedCreateWithoutTubingsInput>
  where?: Prisma.WellWhereInput
}

export type WellUpdateToOneWithWhereWithoutTubingsInput = {
  where?: Prisma.WellWhereInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutTubingsInput, Prisma.WellUncheckedUpdateWithoutTubingsInput>
}

export type WellUpdateWithoutTubingsInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutTubingsInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellCreateWithoutWellInfoInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  casings?: Prisma.CasingCreateNestedManyWithoutWellInput
  geology?: Prisma.GeologyCreateNestedOneWithoutWellsInput
  location?: Prisma.LocationCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationCreateNestedManyWithoutWellInput
  operator?: Prisma.OperatorCreateNestedOneWithoutWellsInput
  perforations?: Prisma.PerforationCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingCreateNestedManyWithoutWellInput
}

export type WellUncheckedCreateWithoutWellInfoInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
  casings?: Prisma.CasingUncheckedCreateNestedManyWithoutWellInput
  location?: Prisma.LocationUncheckedCreateNestedOneWithoutWellInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedCreateNestedManyWithoutWellInput
  perforations?: Prisma.PerforationUncheckedCreateNestedManyWithoutWellInput
  plugSchedules?: Prisma.PlugScheduleUncheckedCreateNestedManyWithoutWellInput
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutWellInput
  tubings?: Prisma.TubingUncheckedCreateNestedManyWithoutWellInput
}

export type WellCreateOrConnectWithoutWellInfoInput = {
  where: Prisma.WellWhereUniqueInput
  create: Prisma.XOR<Prisma.WellCreateWithoutWellInfoInput, Prisma.WellUncheckedCreateWithoutWellInfoInput>
}

export type WellUpsertWithoutWellInfoInput = {
  update: Prisma.XOR<Prisma.WellUpdateWithoutWellInfoInput, Prisma.WellUncheckedUpdateWithoutWellInfoInput>
  create: Prisma.XOR<Prisma.WellCreateWithoutWellInfoInput, Prisma.WellUncheckedCreateWithoutWellInfoInput>
  where?: Prisma.WellWhereInput
}

export type WellUpdateToOneWithWhereWithoutWellInfoInput = {
  where?: Prisma.WellWhereInput
  data: Prisma.XOR<Prisma.WellUpdateWithoutWellInfoInput, Prisma.WellUncheckedUpdateWithoutWellInfoInput>
}

export type WellUpdateWithoutWellInfoInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutWellInfoInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
}

export type WellCreateManyGeologyInput = {
  api: string
  operatorId?: string | null
  wellInfoId?: string | null
  locationId?: string | null
}

export type WellUpdateWithoutGeologyInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  operator?: Prisma.OperatorUpdateOneWithoutWellsNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutGeologyInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateManyWithoutGeologyInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type WellCreateManyOperatorInput = {
  api: string
  wellInfoId?: string | null
  locationId?: string | null
  geologyId?: string | null
}

export type WellUpdateWithoutOperatorInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUpdateManyWithoutWellNestedInput
  geology?: Prisma.GeologyUpdateOneWithoutWellsNestedInput
  location?: Prisma.LocationUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateWithoutOperatorInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  casings?: Prisma.CasingUncheckedUpdateManyWithoutWellNestedInput
  location?: Prisma.LocationUncheckedUpdateOneWithoutWellNestedInput
  mechanicalIsolation?: Prisma.MechanicalIsolationUncheckedUpdateManyWithoutWellNestedInput
  perforations?: Prisma.PerforationUncheckedUpdateManyWithoutWellNestedInput
  plugSchedules?: Prisma.PlugScheduleUncheckedUpdateManyWithoutWellNestedInput
  rods?: Prisma.RodsUncheckedUpdateManyWithoutWellNestedInput
  tubings?: Prisma.TubingUncheckedUpdateManyWithoutWellNestedInput
  wellInfo?: Prisma.WellInfoUncheckedUpdateOneWithoutWellNestedInput
}

export type WellUncheckedUpdateManyWithoutOperatorInput = {
  api?: Prisma.StringFieldUpdateOperationsInput | string
  wellInfoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  geologyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}


/**
 * Count Type WellCountOutputType
 */

export type WellCountOutputType = {
  casings: number
  mechanicalIsolation: number
  perforations: number
  plugSchedules: number
  rods: number
  tubings: number
}

export type WellCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  casings?: boolean | WellCountOutputTypeCountCasingsArgs
  mechanicalIsolation?: boolean | WellCountOutputTypeCountMechanicalIsolationArgs
  perforations?: boolean | WellCountOutputTypeCountPerforationsArgs
  plugSchedules?: boolean | WellCountOutputTypeCountPlugSchedulesArgs
  rods?: boolean | WellCountOutputTypeCountRodsArgs
  tubings?: boolean | WellCountOutputTypeCountTubingsArgs
}

/**
 * WellCountOutputType without action
 */
export type WellCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WellCountOutputType
   */
  select?: Prisma.WellCountOutputTypeSelect<ExtArgs> | null
}

/**
 * WellCountOutputType without action
 */
export type WellCountOutputTypeCountCasingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.CasingWhereInput
}

/**
 * WellCountOutputType without action
 */
export type WellCountOutputTypeCountMechanicalIsolationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MechanicalIsolationWhereInput
}

/**
 * WellCountOutputType without action
 */
export type WellCountOutputTypeCountPerforationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PerforationWhereInput
}

/**
 * WellCountOutputType without action
 */
export type WellCountOutputTypeCountPlugSchedulesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PlugScheduleWhereInput
}

/**
 * WellCountOutputType without action
 */
export type WellCountOutputTypeCountRodsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RodsWhereInput
}

/**
 * WellCountOutputType without action
 */
export type WellCountOutputTypeCountTubingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TubingWhereInput
}


export type WellSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  api?: boolean
  operatorId?: boolean
  wellInfoId?: boolean
  locationId?: boolean
  geologyId?: boolean
  casings?: boolean | Prisma.Well$casingsArgs<ExtArgs>
  geology?: boolean | Prisma.Well$geologyArgs<ExtArgs>
  location?: boolean | Prisma.Well$locationArgs<ExtArgs>
  mechanicalIsolation?: boolean | Prisma.Well$mechanicalIsolationArgs<ExtArgs>
  operator?: boolean | Prisma.Well$operatorArgs<ExtArgs>
  perforations?: boolean | Prisma.Well$perforationsArgs<ExtArgs>
  plugSchedules?: boolean | Prisma.Well$plugSchedulesArgs<ExtArgs>
  rods?: boolean | Prisma.Well$rodsArgs<ExtArgs>
  tubings?: boolean | Prisma.Well$tubingsArgs<ExtArgs>
  wellInfo?: boolean | Prisma.Well$wellInfoArgs<ExtArgs>
  _count?: boolean | Prisma.WellCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["well"]>

export type WellSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  api?: boolean
  operatorId?: boolean
  wellInfoId?: boolean
  locationId?: boolean
  geologyId?: boolean
  geology?: boolean | Prisma.Well$geologyArgs<ExtArgs>
  operator?: boolean | Prisma.Well$operatorArgs<ExtArgs>
}, ExtArgs["result"]["well"]>

export type WellSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  api?: boolean
  operatorId?: boolean
  wellInfoId?: boolean
  locationId?: boolean
  geologyId?: boolean
  geology?: boolean | Prisma.Well$geologyArgs<ExtArgs>
  operator?: boolean | Prisma.Well$operatorArgs<ExtArgs>
}, ExtArgs["result"]["well"]>

export type WellSelectScalar = {
  api?: boolean
  operatorId?: boolean
  wellInfoId?: boolean
  locationId?: boolean
  geologyId?: boolean
}

export type WellOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"api" | "operatorId" | "wellInfoId" | "locationId" | "geologyId", ExtArgs["result"]["well"]>
export type WellInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  casings?: boolean | Prisma.Well$casingsArgs<ExtArgs>
  geology?: boolean | Prisma.Well$geologyArgs<ExtArgs>
  location?: boolean | Prisma.Well$locationArgs<ExtArgs>
  mechanicalIsolation?: boolean | Prisma.Well$mechanicalIsolationArgs<ExtArgs>
  operator?: boolean | Prisma.Well$operatorArgs<ExtArgs>
  perforations?: boolean | Prisma.Well$perforationsArgs<ExtArgs>
  plugSchedules?: boolean | Prisma.Well$plugSchedulesArgs<ExtArgs>
  rods?: boolean | Prisma.Well$rodsArgs<ExtArgs>
  tubings?: boolean | Prisma.Well$tubingsArgs<ExtArgs>
  wellInfo?: boolean | Prisma.Well$wellInfoArgs<ExtArgs>
  _count?: boolean | Prisma.WellCountOutputTypeDefaultArgs<ExtArgs>
}
export type WellIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  geology?: boolean | Prisma.Well$geologyArgs<ExtArgs>
  operator?: boolean | Prisma.Well$operatorArgs<ExtArgs>
}
export type WellIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  geology?: boolean | Prisma.Well$geologyArgs<ExtArgs>
  operator?: boolean | Prisma.Well$operatorArgs<ExtArgs>
}

export type $WellPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Well"
  objects: {
    casings: Prisma.$CasingPayload<ExtArgs>[]
    geology: Prisma.$GeologyPayload<ExtArgs> | null
    location: Prisma.$LocationPayload<ExtArgs> | null
    mechanicalIsolation: Prisma.$MechanicalIsolationPayload<ExtArgs>[]
    operator: Prisma.$OperatorPayload<ExtArgs> | null
    perforations: Prisma.$PerforationPayload<ExtArgs>[]
    plugSchedules: Prisma.$PlugSchedulePayload<ExtArgs>[]
    rods: Prisma.$RodsPayload<ExtArgs>[]
    tubings: Prisma.$TubingPayload<ExtArgs>[]
    wellInfo: Prisma.$WellInfoPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    api: string
    operatorId: string | null
    wellInfoId: string | null
    locationId: string | null
    geologyId: string | null
  }, ExtArgs["result"]["well"]>
  composites: {}
}

export type WellGetPayload<S extends boolean | null | undefined | WellDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$WellPayload, S>

export type WellCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<WellFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: WellCountAggregateInputType | true
  }

export interface WellDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Well'], meta: { name: 'Well' } }
  /**
   * Find zero or one Well that matches the filter.
   * @param {WellFindUniqueArgs} args - Arguments to find a Well
   * @example
   * // Get one Well
   * const well = await prisma.well.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WellFindUniqueArgs>(args: Prisma.SelectSubset<T, WellFindUniqueArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Well that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WellFindUniqueOrThrowArgs} args - Arguments to find a Well
   * @example
   * // Get one Well
   * const well = await prisma.well.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WellFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, WellFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Well that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WellFindFirstArgs} args - Arguments to find a Well
   * @example
   * // Get one Well
   * const well = await prisma.well.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WellFindFirstArgs>(args?: Prisma.SelectSubset<T, WellFindFirstArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Well that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WellFindFirstOrThrowArgs} args - Arguments to find a Well
   * @example
   * // Get one Well
   * const well = await prisma.well.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WellFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, WellFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Wells that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WellFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Wells
   * const wells = await prisma.well.findMany()
   * 
   * // Get first 10 Wells
   * const wells = await prisma.well.findMany({ take: 10 })
   * 
   * // Only select the `api`
   * const wellWithApiOnly = await prisma.well.findMany({ select: { api: true } })
   * 
   */
  findMany<T extends WellFindManyArgs>(args?: Prisma.SelectSubset<T, WellFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Well.
   * @param {WellCreateArgs} args - Arguments to create a Well.
   * @example
   * // Create one Well
   * const Well = await prisma.well.create({
   *   data: {
   *     // ... data to create a Well
   *   }
   * })
   * 
   */
  create<T extends WellCreateArgs>(args: Prisma.SelectSubset<T, WellCreateArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Wells.
   * @param {WellCreateManyArgs} args - Arguments to create many Wells.
   * @example
   * // Create many Wells
   * const well = await prisma.well.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends WellCreateManyArgs>(args?: Prisma.SelectSubset<T, WellCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Wells and returns the data saved in the database.
   * @param {WellCreateManyAndReturnArgs} args - Arguments to create many Wells.
   * @example
   * // Create many Wells
   * const well = await prisma.well.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Wells and only return the `api`
   * const wellWithApiOnly = await prisma.well.createManyAndReturn({
   *   select: { api: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends WellCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, WellCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Well.
   * @param {WellDeleteArgs} args - Arguments to delete one Well.
   * @example
   * // Delete one Well
   * const Well = await prisma.well.delete({
   *   where: {
   *     // ... filter to delete one Well
   *   }
   * })
   * 
   */
  delete<T extends WellDeleteArgs>(args: Prisma.SelectSubset<T, WellDeleteArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Well.
   * @param {WellUpdateArgs} args - Arguments to update one Well.
   * @example
   * // Update one Well
   * const well = await prisma.well.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends WellUpdateArgs>(args: Prisma.SelectSubset<T, WellUpdateArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Wells.
   * @param {WellDeleteManyArgs} args - Arguments to filter Wells to delete.
   * @example
   * // Delete a few Wells
   * const { count } = await prisma.well.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends WellDeleteManyArgs>(args?: Prisma.SelectSubset<T, WellDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wells.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WellUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Wells
   * const well = await prisma.well.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends WellUpdateManyArgs>(args: Prisma.SelectSubset<T, WellUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wells and returns the data updated in the database.
   * @param {WellUpdateManyAndReturnArgs} args - Arguments to update many Wells.
   * @example
   * // Update many Wells
   * const well = await prisma.well.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Wells and only return the `api`
   * const wellWithApiOnly = await prisma.well.updateManyAndReturn({
   *   select: { api: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends WellUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, WellUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Well.
   * @param {WellUpsertArgs} args - Arguments to update or create a Well.
   * @example
   * // Update or create a Well
   * const well = await prisma.well.upsert({
   *   create: {
   *     // ... data to create a Well
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Well we want to update
   *   }
   * })
   */
  upsert<T extends WellUpsertArgs>(args: Prisma.SelectSubset<T, WellUpsertArgs<ExtArgs>>): Prisma.Prisma__WellClient<runtime.Types.Result.GetResult<Prisma.$WellPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Wells.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WellCountArgs} args - Arguments to filter Wells to count.
   * @example
   * // Count the number of Wells
   * const count = await prisma.well.count({
   *   where: {
   *     // ... the filter for the Wells we want to count
   *   }
   * })
  **/
  count<T extends WellCountArgs>(
    args?: Prisma.Subset<T, WellCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WellCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Well.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WellAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends WellAggregateArgs>(args: Prisma.Subset<T, WellAggregateArgs>): Prisma.PrismaPromise<GetWellAggregateType<T>>

  /**
   * Group by Well.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WellGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends WellGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WellGroupByArgs['orderBy'] }
      : { orderBy?: WellGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, WellGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWellGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Well model
 */
readonly fields: WellFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Well.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WellClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  casings<T extends Prisma.Well$casingsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$casingsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CasingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  geology<T extends Prisma.Well$geologyArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$geologyArgs<ExtArgs>>): Prisma.Prisma__GeologyClient<runtime.Types.Result.GetResult<Prisma.$GeologyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  location<T extends Prisma.Well$locationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$locationArgs<ExtArgs>>): Prisma.Prisma__LocationClient<runtime.Types.Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  mechanicalIsolation<T extends Prisma.Well$mechanicalIsolationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$mechanicalIsolationArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MechanicalIsolationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  operator<T extends Prisma.Well$operatorArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$operatorArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  perforations<T extends Prisma.Well$perforationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$perforationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PerforationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  plugSchedules<T extends Prisma.Well$plugSchedulesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$plugSchedulesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlugSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  rods<T extends Prisma.Well$rodsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$rodsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RodsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  tubings<T extends Prisma.Well$tubingsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$tubingsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TubingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  wellInfo<T extends Prisma.Well$wellInfoArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Well$wellInfoArgs<ExtArgs>>): Prisma.Prisma__WellInfoClient<runtime.Types.Result.GetResult<Prisma.$WellInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Well model
 */
export interface WellFieldRefs {
  readonly api: Prisma.FieldRef<"Well", 'String'>
  readonly operatorId: Prisma.FieldRef<"Well", 'String'>
  readonly wellInfoId: Prisma.FieldRef<"Well", 'String'>
  readonly locationId: Prisma.FieldRef<"Well", 'String'>
  readonly geologyId: Prisma.FieldRef<"Well", 'String'>
}
    

// Custom InputTypes
/**
 * Well findUnique
 */
export type WellFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * Filter, which Well to fetch.
   */
  where: Prisma.WellWhereUniqueInput
}

/**
 * Well findUniqueOrThrow
 */
export type WellFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * Filter, which Well to fetch.
   */
  where: Prisma.WellWhereUniqueInput
}

/**
 * Well findFirst
 */
export type WellFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * Filter, which Well to fetch.
   */
  where?: Prisma.WellWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Wells to fetch.
   */
  orderBy?: Prisma.WellOrderByWithRelationInput | Prisma.WellOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Wells.
   */
  cursor?: Prisma.WellWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Wells from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Wells.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Wells.
   */
  distinct?: Prisma.WellScalarFieldEnum | Prisma.WellScalarFieldEnum[]
}

/**
 * Well findFirstOrThrow
 */
export type WellFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * Filter, which Well to fetch.
   */
  where?: Prisma.WellWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Wells to fetch.
   */
  orderBy?: Prisma.WellOrderByWithRelationInput | Prisma.WellOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Wells.
   */
  cursor?: Prisma.WellWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Wells from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Wells.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Wells.
   */
  distinct?: Prisma.WellScalarFieldEnum | Prisma.WellScalarFieldEnum[]
}

/**
 * Well findMany
 */
export type WellFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * Filter, which Wells to fetch.
   */
  where?: Prisma.WellWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Wells to fetch.
   */
  orderBy?: Prisma.WellOrderByWithRelationInput | Prisma.WellOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Wells.
   */
  cursor?: Prisma.WellWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Wells from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Wells.
   */
  skip?: number
  distinct?: Prisma.WellScalarFieldEnum | Prisma.WellScalarFieldEnum[]
}

/**
 * Well create
 */
export type WellCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * The data needed to create a Well.
   */
  data: Prisma.XOR<Prisma.WellCreateInput, Prisma.WellUncheckedCreateInput>
}

/**
 * Well createMany
 */
export type WellCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Wells.
   */
  data: Prisma.WellCreateManyInput | Prisma.WellCreateManyInput[]
}

/**
 * Well createManyAndReturn
 */
export type WellCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * The data used to create many Wells.
   */
  data: Prisma.WellCreateManyInput | Prisma.WellCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Well update
 */
export type WellUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * The data needed to update a Well.
   */
  data: Prisma.XOR<Prisma.WellUpdateInput, Prisma.WellUncheckedUpdateInput>
  /**
   * Choose, which Well to update.
   */
  where: Prisma.WellWhereUniqueInput
}

/**
 * Well updateMany
 */
export type WellUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Wells.
   */
  data: Prisma.XOR<Prisma.WellUpdateManyMutationInput, Prisma.WellUncheckedUpdateManyInput>
  /**
   * Filter which Wells to update
   */
  where?: Prisma.WellWhereInput
  /**
   * Limit how many Wells to update.
   */
  limit?: number
}

/**
 * Well updateManyAndReturn
 */
export type WellUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * The data used to update Wells.
   */
  data: Prisma.XOR<Prisma.WellUpdateManyMutationInput, Prisma.WellUncheckedUpdateManyInput>
  /**
   * Filter which Wells to update
   */
  where?: Prisma.WellWhereInput
  /**
   * Limit how many Wells to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Well upsert
 */
export type WellUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * The filter to search for the Well to update in case it exists.
   */
  where: Prisma.WellWhereUniqueInput
  /**
   * In case the Well found by the `where` argument doesn't exist, create a new Well with this data.
   */
  create: Prisma.XOR<Prisma.WellCreateInput, Prisma.WellUncheckedCreateInput>
  /**
   * In case the Well was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WellUpdateInput, Prisma.WellUncheckedUpdateInput>
}

/**
 * Well delete
 */
export type WellDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
  /**
   * Filter which Well to delete.
   */
  where: Prisma.WellWhereUniqueInput
}

/**
 * Well deleteMany
 */
export type WellDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Wells to delete
   */
  where?: Prisma.WellWhereInput
  /**
   * Limit how many Wells to delete.
   */
  limit?: number
}

/**
 * Well.casings
 */
export type Well$casingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Casing
   */
  select?: Prisma.CasingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Casing
   */
  omit?: Prisma.CasingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CasingInclude<ExtArgs> | null
  where?: Prisma.CasingWhereInput
  orderBy?: Prisma.CasingOrderByWithRelationInput | Prisma.CasingOrderByWithRelationInput[]
  cursor?: Prisma.CasingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CasingScalarFieldEnum | Prisma.CasingScalarFieldEnum[]
}

/**
 * Well.geology
 */
export type Well$geologyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Geology
   */
  select?: Prisma.GeologySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Geology
   */
  omit?: Prisma.GeologyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GeologyInclude<ExtArgs> | null
  where?: Prisma.GeologyWhereInput
}

/**
 * Well.location
 */
export type Well$locationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Location
   */
  select?: Prisma.LocationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Location
   */
  omit?: Prisma.LocationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LocationInclude<ExtArgs> | null
  where?: Prisma.LocationWhereInput
}

/**
 * Well.mechanicalIsolation
 */
export type Well$mechanicalIsolationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MechanicalIsolation
   */
  select?: Prisma.MechanicalIsolationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MechanicalIsolation
   */
  omit?: Prisma.MechanicalIsolationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MechanicalIsolationInclude<ExtArgs> | null
  where?: Prisma.MechanicalIsolationWhereInput
  orderBy?: Prisma.MechanicalIsolationOrderByWithRelationInput | Prisma.MechanicalIsolationOrderByWithRelationInput[]
  cursor?: Prisma.MechanicalIsolationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MechanicalIsolationScalarFieldEnum | Prisma.MechanicalIsolationScalarFieldEnum[]
}

/**
 * Well.operator
 */
export type Well$operatorArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  where?: Prisma.OperatorWhereInput
}

/**
 * Well.perforations
 */
export type Well$perforationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Perforation
   */
  select?: Prisma.PerforationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Perforation
   */
  omit?: Prisma.PerforationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PerforationInclude<ExtArgs> | null
  where?: Prisma.PerforationWhereInput
  orderBy?: Prisma.PerforationOrderByWithRelationInput | Prisma.PerforationOrderByWithRelationInput[]
  cursor?: Prisma.PerforationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PerforationScalarFieldEnum | Prisma.PerforationScalarFieldEnum[]
}

/**
 * Well.plugSchedules
 */
export type Well$plugSchedulesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlugSchedule
   */
  select?: Prisma.PlugScheduleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PlugSchedule
   */
  omit?: Prisma.PlugScheduleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlugScheduleInclude<ExtArgs> | null
  where?: Prisma.PlugScheduleWhereInput
  orderBy?: Prisma.PlugScheduleOrderByWithRelationInput | Prisma.PlugScheduleOrderByWithRelationInput[]
  cursor?: Prisma.PlugScheduleWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PlugScheduleScalarFieldEnum | Prisma.PlugScheduleScalarFieldEnum[]
}

/**
 * Well.rods
 */
export type Well$rodsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Rods
   */
  select?: Prisma.RodsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Rods
   */
  omit?: Prisma.RodsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodsInclude<ExtArgs> | null
  where?: Prisma.RodsWhereInput
  orderBy?: Prisma.RodsOrderByWithRelationInput | Prisma.RodsOrderByWithRelationInput[]
  cursor?: Prisma.RodsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.RodsScalarFieldEnum | Prisma.RodsScalarFieldEnum[]
}

/**
 * Well.tubings
 */
export type Well$tubingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tubing
   */
  select?: Prisma.TubingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tubing
   */
  omit?: Prisma.TubingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TubingInclude<ExtArgs> | null
  where?: Prisma.TubingWhereInput
  orderBy?: Prisma.TubingOrderByWithRelationInput | Prisma.TubingOrderByWithRelationInput[]
  cursor?: Prisma.TubingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TubingScalarFieldEnum | Prisma.TubingScalarFieldEnum[]
}

/**
 * Well.wellInfo
 */
export type Well$wellInfoArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WellInfo
   */
  select?: Prisma.WellInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WellInfo
   */
  omit?: Prisma.WellInfoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInfoInclude<ExtArgs> | null
  where?: Prisma.WellInfoWhereInput
}

/**
 * Well without action
 */
export type WellDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Well
   */
  select?: Prisma.WellSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Well
   */
  omit?: Prisma.WellOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WellInclude<ExtArgs> | null
}

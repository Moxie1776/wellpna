
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `RodEnum` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model RodEnum
 * 
 */
export type RodEnumModel = runtime.Types.Result.DefaultSelection<Prisma.$RodEnumPayload>

export type AggregateRodEnum = {
  _count: RodEnumCountAggregateOutputType | null
  _min: RodEnumMinAggregateOutputType | null
  _max: RodEnumMaxAggregateOutputType | null
}

export type RodEnumMinAggregateOutputType = {
  id: string | null
  type: string | null
}

export type RodEnumMaxAggregateOutputType = {
  id: string | null
  type: string | null
}

export type RodEnumCountAggregateOutputType = {
  id: number
  type: number
  _all: number
}


export type RodEnumMinAggregateInputType = {
  id?: true
  type?: true
}

export type RodEnumMaxAggregateInputType = {
  id?: true
  type?: true
}

export type RodEnumCountAggregateInputType = {
  id?: true
  type?: true
  _all?: true
}

export type RodEnumAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which RodEnum to aggregate.
   */
  where?: Prisma.RodEnumWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RodEnums to fetch.
   */
  orderBy?: Prisma.RodEnumOrderByWithRelationInput | Prisma.RodEnumOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.RodEnumWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RodEnums from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RodEnums.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned RodEnums
  **/
  _count?: true | RodEnumCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: RodEnumMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: RodEnumMaxAggregateInputType
}

export type GetRodEnumAggregateType<T extends RodEnumAggregateArgs> = {
      [P in keyof T & keyof AggregateRodEnum]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateRodEnum[P]>
    : Prisma.GetScalarType<T[P], AggregateRodEnum[P]>
}




export type RodEnumGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RodEnumWhereInput
  orderBy?: Prisma.RodEnumOrderByWithAggregationInput | Prisma.RodEnumOrderByWithAggregationInput[]
  by: Prisma.RodEnumScalarFieldEnum[] | Prisma.RodEnumScalarFieldEnum
  having?: Prisma.RodEnumScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: RodEnumCountAggregateInputType | true
  _min?: RodEnumMinAggregateInputType
  _max?: RodEnumMaxAggregateInputType
}

export type RodEnumGroupByOutputType = {
  id: string
  type: string
  _count: RodEnumCountAggregateOutputType | null
  _min: RodEnumMinAggregateOutputType | null
  _max: RodEnumMaxAggregateOutputType | null
}

type GetRodEnumGroupByPayload<T extends RodEnumGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<RodEnumGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof RodEnumGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], RodEnumGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], RodEnumGroupByOutputType[P]>
      }
    >
  >



export type RodEnumWhereInput = {
  AND?: Prisma.RodEnumWhereInput | Prisma.RodEnumWhereInput[]
  OR?: Prisma.RodEnumWhereInput[]
  NOT?: Prisma.RodEnumWhereInput | Prisma.RodEnumWhereInput[]
  id?: Prisma.StringFilter<"RodEnum"> | string
  type?: Prisma.StringFilter<"RodEnum"> | string
  rods?: Prisma.RodsListRelationFilter
}

export type RodEnumOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  rods?: Prisma.RodsOrderByRelationAggregateInput
}

export type RodEnumWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.RodEnumWhereInput | Prisma.RodEnumWhereInput[]
  OR?: Prisma.RodEnumWhereInput[]
  NOT?: Prisma.RodEnumWhereInput | Prisma.RodEnumWhereInput[]
  type?: Prisma.StringFilter<"RodEnum"> | string
  rods?: Prisma.RodsListRelationFilter
}, "id">

export type RodEnumOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  _count?: Prisma.RodEnumCountOrderByAggregateInput
  _max?: Prisma.RodEnumMaxOrderByAggregateInput
  _min?: Prisma.RodEnumMinOrderByAggregateInput
}

export type RodEnumScalarWhereWithAggregatesInput = {
  AND?: Prisma.RodEnumScalarWhereWithAggregatesInput | Prisma.RodEnumScalarWhereWithAggregatesInput[]
  OR?: Prisma.RodEnumScalarWhereWithAggregatesInput[]
  NOT?: Prisma.RodEnumScalarWhereWithAggregatesInput | Prisma.RodEnumScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"RodEnum"> | string
  type?: Prisma.StringWithAggregatesFilter<"RodEnum"> | string
}

export type RodEnumCreateInput = {
  id?: string
  type: string
  rods?: Prisma.RodsCreateNestedManyWithoutRodEnumInput
}

export type RodEnumUncheckedCreateInput = {
  id?: string
  type: string
  rods?: Prisma.RodsUncheckedCreateNestedManyWithoutRodEnumInput
}

export type RodEnumUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  rods?: Prisma.RodsUpdateManyWithoutRodEnumNestedInput
}

export type RodEnumUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  rods?: Prisma.RodsUncheckedUpdateManyWithoutRodEnumNestedInput
}

export type RodEnumCreateManyInput = {
  id?: string
  type: string
}

export type RodEnumUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
}

export type RodEnumUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
}

export type RodEnumScalarRelationFilter = {
  is?: Prisma.RodEnumWhereInput
  isNot?: Prisma.RodEnumWhereInput
}

export type RodEnumCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
}

export type RodEnumMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
}

export type RodEnumMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
}

export type RodEnumCreateNestedOneWithoutRodsInput = {
  create?: Prisma.XOR<Prisma.RodEnumCreateWithoutRodsInput, Prisma.RodEnumUncheckedCreateWithoutRodsInput>
  connectOrCreate?: Prisma.RodEnumCreateOrConnectWithoutRodsInput
  connect?: Prisma.RodEnumWhereUniqueInput
}

export type RodEnumUpdateOneRequiredWithoutRodsNestedInput = {
  create?: Prisma.XOR<Prisma.RodEnumCreateWithoutRodsInput, Prisma.RodEnumUncheckedCreateWithoutRodsInput>
  connectOrCreate?: Prisma.RodEnumCreateOrConnectWithoutRodsInput
  upsert?: Prisma.RodEnumUpsertWithoutRodsInput
  connect?: Prisma.RodEnumWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.RodEnumUpdateToOneWithWhereWithoutRodsInput, Prisma.RodEnumUpdateWithoutRodsInput>, Prisma.RodEnumUncheckedUpdateWithoutRodsInput>
}

export type RodEnumCreateWithoutRodsInput = {
  id?: string
  type: string
}

export type RodEnumUncheckedCreateWithoutRodsInput = {
  id?: string
  type: string
}

export type RodEnumCreateOrConnectWithoutRodsInput = {
  where: Prisma.RodEnumWhereUniqueInput
  create: Prisma.XOR<Prisma.RodEnumCreateWithoutRodsInput, Prisma.RodEnumUncheckedCreateWithoutRodsInput>
}

export type RodEnumUpsertWithoutRodsInput = {
  update: Prisma.XOR<Prisma.RodEnumUpdateWithoutRodsInput, Prisma.RodEnumUncheckedUpdateWithoutRodsInput>
  create: Prisma.XOR<Prisma.RodEnumCreateWithoutRodsInput, Prisma.RodEnumUncheckedCreateWithoutRodsInput>
  where?: Prisma.RodEnumWhereInput
}

export type RodEnumUpdateToOneWithWhereWithoutRodsInput = {
  where?: Prisma.RodEnumWhereInput
  data: Prisma.XOR<Prisma.RodEnumUpdateWithoutRodsInput, Prisma.RodEnumUncheckedUpdateWithoutRodsInput>
}

export type RodEnumUpdateWithoutRodsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
}

export type RodEnumUncheckedUpdateWithoutRodsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type RodEnumCountOutputType
 */

export type RodEnumCountOutputType = {
  rods: number
}

export type RodEnumCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  rods?: boolean | RodEnumCountOutputTypeCountRodsArgs
}

/**
 * RodEnumCountOutputType without action
 */
export type RodEnumCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnumCountOutputType
   */
  select?: Prisma.RodEnumCountOutputTypeSelect<ExtArgs> | null
}

/**
 * RodEnumCountOutputType without action
 */
export type RodEnumCountOutputTypeCountRodsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RodsWhereInput
}


export type RodEnumSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  rods?: boolean | Prisma.RodEnum$rodsArgs<ExtArgs>
  _count?: boolean | Prisma.RodEnumCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["rodEnum"]>

export type RodEnumSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
}, ExtArgs["result"]["rodEnum"]>

export type RodEnumSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
}, ExtArgs["result"]["rodEnum"]>

export type RodEnumSelectScalar = {
  id?: boolean
  type?: boolean
}

export type RodEnumOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "type", ExtArgs["result"]["rodEnum"]>
export type RodEnumInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  rods?: boolean | Prisma.RodEnum$rodsArgs<ExtArgs>
  _count?: boolean | Prisma.RodEnumCountOutputTypeDefaultArgs<ExtArgs>
}
export type RodEnumIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type RodEnumIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $RodEnumPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "RodEnum"
  objects: {
    rods: Prisma.$RodsPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    type: string
  }, ExtArgs["result"]["rodEnum"]>
  composites: {}
}

export type RodEnumGetPayload<S extends boolean | null | undefined | RodEnumDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$RodEnumPayload, S>

export type RodEnumCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<RodEnumFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: RodEnumCountAggregateInputType | true
  }

export interface RodEnumDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RodEnum'], meta: { name: 'RodEnum' } }
  /**
   * Find zero or one RodEnum that matches the filter.
   * @param {RodEnumFindUniqueArgs} args - Arguments to find a RodEnum
   * @example
   * // Get one RodEnum
   * const rodEnum = await prisma.rodEnum.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends RodEnumFindUniqueArgs>(args: Prisma.SelectSubset<T, RodEnumFindUniqueArgs<ExtArgs>>): Prisma.Prisma__RodEnumClient<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one RodEnum that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {RodEnumFindUniqueOrThrowArgs} args - Arguments to find a RodEnum
   * @example
   * // Get one RodEnum
   * const rodEnum = await prisma.rodEnum.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends RodEnumFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, RodEnumFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__RodEnumClient<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first RodEnum that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RodEnumFindFirstArgs} args - Arguments to find a RodEnum
   * @example
   * // Get one RodEnum
   * const rodEnum = await prisma.rodEnum.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends RodEnumFindFirstArgs>(args?: Prisma.SelectSubset<T, RodEnumFindFirstArgs<ExtArgs>>): Prisma.Prisma__RodEnumClient<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first RodEnum that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RodEnumFindFirstOrThrowArgs} args - Arguments to find a RodEnum
   * @example
   * // Get one RodEnum
   * const rodEnum = await prisma.rodEnum.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends RodEnumFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, RodEnumFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__RodEnumClient<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more RodEnums that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RodEnumFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all RodEnums
   * const rodEnums = await prisma.rodEnum.findMany()
   * 
   * // Get first 10 RodEnums
   * const rodEnums = await prisma.rodEnum.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const rodEnumWithIdOnly = await prisma.rodEnum.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends RodEnumFindManyArgs>(args?: Prisma.SelectSubset<T, RodEnumFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a RodEnum.
   * @param {RodEnumCreateArgs} args - Arguments to create a RodEnum.
   * @example
   * // Create one RodEnum
   * const RodEnum = await prisma.rodEnum.create({
   *   data: {
   *     // ... data to create a RodEnum
   *   }
   * })
   * 
   */
  create<T extends RodEnumCreateArgs>(args: Prisma.SelectSubset<T, RodEnumCreateArgs<ExtArgs>>): Prisma.Prisma__RodEnumClient<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many RodEnums.
   * @param {RodEnumCreateManyArgs} args - Arguments to create many RodEnums.
   * @example
   * // Create many RodEnums
   * const rodEnum = await prisma.rodEnum.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends RodEnumCreateManyArgs>(args?: Prisma.SelectSubset<T, RodEnumCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many RodEnums and returns the data saved in the database.
   * @param {RodEnumCreateManyAndReturnArgs} args - Arguments to create many RodEnums.
   * @example
   * // Create many RodEnums
   * const rodEnum = await prisma.rodEnum.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many RodEnums and only return the `id`
   * const rodEnumWithIdOnly = await prisma.rodEnum.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends RodEnumCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, RodEnumCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a RodEnum.
   * @param {RodEnumDeleteArgs} args - Arguments to delete one RodEnum.
   * @example
   * // Delete one RodEnum
   * const RodEnum = await prisma.rodEnum.delete({
   *   where: {
   *     // ... filter to delete one RodEnum
   *   }
   * })
   * 
   */
  delete<T extends RodEnumDeleteArgs>(args: Prisma.SelectSubset<T, RodEnumDeleteArgs<ExtArgs>>): Prisma.Prisma__RodEnumClient<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one RodEnum.
   * @param {RodEnumUpdateArgs} args - Arguments to update one RodEnum.
   * @example
   * // Update one RodEnum
   * const rodEnum = await prisma.rodEnum.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends RodEnumUpdateArgs>(args: Prisma.SelectSubset<T, RodEnumUpdateArgs<ExtArgs>>): Prisma.Prisma__RodEnumClient<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more RodEnums.
   * @param {RodEnumDeleteManyArgs} args - Arguments to filter RodEnums to delete.
   * @example
   * // Delete a few RodEnums
   * const { count } = await prisma.rodEnum.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends RodEnumDeleteManyArgs>(args?: Prisma.SelectSubset<T, RodEnumDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more RodEnums.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RodEnumUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many RodEnums
   * const rodEnum = await prisma.rodEnum.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends RodEnumUpdateManyArgs>(args: Prisma.SelectSubset<T, RodEnumUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more RodEnums and returns the data updated in the database.
   * @param {RodEnumUpdateManyAndReturnArgs} args - Arguments to update many RodEnums.
   * @example
   * // Update many RodEnums
   * const rodEnum = await prisma.rodEnum.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more RodEnums and only return the `id`
   * const rodEnumWithIdOnly = await prisma.rodEnum.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends RodEnumUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, RodEnumUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one RodEnum.
   * @param {RodEnumUpsertArgs} args - Arguments to update or create a RodEnum.
   * @example
   * // Update or create a RodEnum
   * const rodEnum = await prisma.rodEnum.upsert({
   *   create: {
   *     // ... data to create a RodEnum
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the RodEnum we want to update
   *   }
   * })
   */
  upsert<T extends RodEnumUpsertArgs>(args: Prisma.SelectSubset<T, RodEnumUpsertArgs<ExtArgs>>): Prisma.Prisma__RodEnumClient<runtime.Types.Result.GetResult<Prisma.$RodEnumPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of RodEnums.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RodEnumCountArgs} args - Arguments to filter RodEnums to count.
   * @example
   * // Count the number of RodEnums
   * const count = await prisma.rodEnum.count({
   *   where: {
   *     // ... the filter for the RodEnums we want to count
   *   }
   * })
  **/
  count<T extends RodEnumCountArgs>(
    args?: Prisma.Subset<T, RodEnumCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], RodEnumCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a RodEnum.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RodEnumAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends RodEnumAggregateArgs>(args: Prisma.Subset<T, RodEnumAggregateArgs>): Prisma.PrismaPromise<GetRodEnumAggregateType<T>>

  /**
   * Group by RodEnum.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RodEnumGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends RodEnumGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: RodEnumGroupByArgs['orderBy'] }
      : { orderBy?: RodEnumGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, RodEnumGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRodEnumGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the RodEnum model
 */
readonly fields: RodEnumFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for RodEnum.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__RodEnumClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  rods<T extends Prisma.RodEnum$rodsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.RodEnum$rodsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RodsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the RodEnum model
 */
export interface RodEnumFieldRefs {
  readonly id: Prisma.FieldRef<"RodEnum", 'String'>
  readonly type: Prisma.FieldRef<"RodEnum", 'String'>
}
    

// Custom InputTypes
/**
 * RodEnum findUnique
 */
export type RodEnumFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * Filter, which RodEnum to fetch.
   */
  where: Prisma.RodEnumWhereUniqueInput
}

/**
 * RodEnum findUniqueOrThrow
 */
export type RodEnumFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * Filter, which RodEnum to fetch.
   */
  where: Prisma.RodEnumWhereUniqueInput
}

/**
 * RodEnum findFirst
 */
export type RodEnumFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * Filter, which RodEnum to fetch.
   */
  where?: Prisma.RodEnumWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RodEnums to fetch.
   */
  orderBy?: Prisma.RodEnumOrderByWithRelationInput | Prisma.RodEnumOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for RodEnums.
   */
  cursor?: Prisma.RodEnumWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RodEnums from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RodEnums.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of RodEnums.
   */
  distinct?: Prisma.RodEnumScalarFieldEnum | Prisma.RodEnumScalarFieldEnum[]
}

/**
 * RodEnum findFirstOrThrow
 */
export type RodEnumFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * Filter, which RodEnum to fetch.
   */
  where?: Prisma.RodEnumWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RodEnums to fetch.
   */
  orderBy?: Prisma.RodEnumOrderByWithRelationInput | Prisma.RodEnumOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for RodEnums.
   */
  cursor?: Prisma.RodEnumWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RodEnums from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RodEnums.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of RodEnums.
   */
  distinct?: Prisma.RodEnumScalarFieldEnum | Prisma.RodEnumScalarFieldEnum[]
}

/**
 * RodEnum findMany
 */
export type RodEnumFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * Filter, which RodEnums to fetch.
   */
  where?: Prisma.RodEnumWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RodEnums to fetch.
   */
  orderBy?: Prisma.RodEnumOrderByWithRelationInput | Prisma.RodEnumOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing RodEnums.
   */
  cursor?: Prisma.RodEnumWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RodEnums from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RodEnums.
   */
  skip?: number
  distinct?: Prisma.RodEnumScalarFieldEnum | Prisma.RodEnumScalarFieldEnum[]
}

/**
 * RodEnum create
 */
export type RodEnumCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * The data needed to create a RodEnum.
   */
  data: Prisma.XOR<Prisma.RodEnumCreateInput, Prisma.RodEnumUncheckedCreateInput>
}

/**
 * RodEnum createMany
 */
export type RodEnumCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many RodEnums.
   */
  data: Prisma.RodEnumCreateManyInput | Prisma.RodEnumCreateManyInput[]
}

/**
 * RodEnum createManyAndReturn
 */
export type RodEnumCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * The data used to create many RodEnums.
   */
  data: Prisma.RodEnumCreateManyInput | Prisma.RodEnumCreateManyInput[]
}

/**
 * RodEnum update
 */
export type RodEnumUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * The data needed to update a RodEnum.
   */
  data: Prisma.XOR<Prisma.RodEnumUpdateInput, Prisma.RodEnumUncheckedUpdateInput>
  /**
   * Choose, which RodEnum to update.
   */
  where: Prisma.RodEnumWhereUniqueInput
}

/**
 * RodEnum updateMany
 */
export type RodEnumUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update RodEnums.
   */
  data: Prisma.XOR<Prisma.RodEnumUpdateManyMutationInput, Prisma.RodEnumUncheckedUpdateManyInput>
  /**
   * Filter which RodEnums to update
   */
  where?: Prisma.RodEnumWhereInput
  /**
   * Limit how many RodEnums to update.
   */
  limit?: number
}

/**
 * RodEnum updateManyAndReturn
 */
export type RodEnumUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * The data used to update RodEnums.
   */
  data: Prisma.XOR<Prisma.RodEnumUpdateManyMutationInput, Prisma.RodEnumUncheckedUpdateManyInput>
  /**
   * Filter which RodEnums to update
   */
  where?: Prisma.RodEnumWhereInput
  /**
   * Limit how many RodEnums to update.
   */
  limit?: number
}

/**
 * RodEnum upsert
 */
export type RodEnumUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * The filter to search for the RodEnum to update in case it exists.
   */
  where: Prisma.RodEnumWhereUniqueInput
  /**
   * In case the RodEnum found by the `where` argument doesn't exist, create a new RodEnum with this data.
   */
  create: Prisma.XOR<Prisma.RodEnumCreateInput, Prisma.RodEnumUncheckedCreateInput>
  /**
   * In case the RodEnum was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.RodEnumUpdateInput, Prisma.RodEnumUncheckedUpdateInput>
}

/**
 * RodEnum delete
 */
export type RodEnumDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
  /**
   * Filter which RodEnum to delete.
   */
  where: Prisma.RodEnumWhereUniqueInput
}

/**
 * RodEnum deleteMany
 */
export type RodEnumDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which RodEnums to delete
   */
  where?: Prisma.RodEnumWhereInput
  /**
   * Limit how many RodEnums to delete.
   */
  limit?: number
}

/**
 * RodEnum.rods
 */
export type RodEnum$rodsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Rods
   */
  select?: Prisma.RodsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Rods
   */
  omit?: Prisma.RodsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodsInclude<ExtArgs> | null
  where?: Prisma.RodsWhereInput
  orderBy?: Prisma.RodsOrderByWithRelationInput | Prisma.RodsOrderByWithRelationInput[]
  cursor?: Prisma.RodsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.RodsScalarFieldEnum | Prisma.RodsScalarFieldEnum[]
}

/**
 * RodEnum without action
 */
export type RodEnumDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RodEnum
   */
  select?: Prisma.RodEnumSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RodEnum
   */
  omit?: Prisma.RodEnumOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RodEnumInclude<ExtArgs> | null
}


/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 * If you're looking for something you can import in the client-side of your application, please refer to the `browser.ts` file instead.
 * 
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
export * from "./enums"
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Casings
 * const casings = await prisma.casing.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<LogOpts extends Prisma.LogLevel = never, OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"], ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-3.0.x.so.node")
path.join(process.cwd(), "src/generated/libquery_engine-debian-openssl-3.0.x.so.node")

/**
 * Model Casing
 * 
 */
export type Casing = Prisma.CasingModel
/**
 * Model CasingEnum
 * 
 */
export type CasingEnum = Prisma.CasingEnumModel
/**
 * Model Geology
 * 
 */
export type Geology = Prisma.GeologyModel
/**
 * Model Location
 * 
 */
export type Location = Prisma.LocationModel
/**
 * Model MechanicalIsolation
 * 
 */
export type MechanicalIsolation = Prisma.MechanicalIsolationModel
/**
 * Model MechanicalIsolationEnum
 * 
 */
export type MechanicalIsolationEnum = Prisma.MechanicalIsolationEnumModel
/**
 * Model Operator
 * 
 */
export type Operator = Prisma.OperatorModel
/**
 * Model OperatorContact
 * 
 */
export type OperatorContact = Prisma.OperatorContactModel
/**
 * Model Perforation
 * 
 */
export type Perforation = Prisma.PerforationModel
/**
 * Model PlugCement
 * 
 */
export type PlugCement = Prisma.PlugCementModel
/**
 * Model PlugCementEnum
 * 
 */
export type PlugCementEnum = Prisma.PlugCementEnumModel
/**
 * Model PlugSchedule
 * 
 */
export type PlugSchedule = Prisma.PlugScheduleModel
/**
 * Model Rods
 * 
 */
export type Rods = Prisma.RodsModel
/**
 * Model RodEnum
 * 
 */
export type RodEnum = Prisma.RodEnumModel
/**
 * Model Tubing
 * 
 */
export type Tubing = Prisma.TubingModel
/**
 * Model TubingEnum
 * 
 */
export type TubingEnum = Prisma.TubingEnumModel
/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model UserRole
 * 
 */
export type UserRole = Prisma.UserRoleModel
/**
 * Model Well
 * 
 */
export type Well = Prisma.WellModel
/**
 * Model WellInfo
 * 
 */
export type WellInfo = Prisma.WellInfoModel
